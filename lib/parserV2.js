var parserV2=function(){var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,10],$V1=[1,11],$V2=[1,12],$V3=[1,13],$V4=[1,14],$V5=[5,6],$V6=[5,6,71,75],$V7=[1,22],$V8=[1,23],$V9=[14,15,82],$Va=[5,6,75],$Vb=[5,6,51,57,71,73,75,88,93],$Vc=[5,6,17,41,48,51,54,57,60,62,67,71,73,75,83,88,93,97,98,99,100,101,102,104,105],$Vd=[1,39],$Ve=[1,44],$Vf=[5,6,57,71,73,75,88,93],$Vg=[5,6,41,57,67,71,73,75,88,93],$Vh=[5,6,54,62,71,73,75,93,97,98,99,100,101,102,104,105],$Vi=[41,57],$Vj=[5,6,57,71,73,75,93],$Vk=[5,6,41],$Vl=[1,91],$Vm=[1,89],$Vn=[1,90],$Vo=[1,92],$Vp=[1,93],$Vq=[1,94],$Vr=[1,96],$Vs=[1,95],$Vt=[5,6,71,73,75,93],$Vu=[5,6,40,41,46,57,62],$Vv=[5,6,40,41,46,57],$Vw=[41,46],$Vx=[2,44],$Vy=[1,118],$Vz=[1,119],$VA=[40,41],$VB=[2,34],$VC=[5,6,71,73,75],$VD=[1,146],$VE=[1,147],$VF=[1,148],$VG=[1,142],$VH=[5,6,62],$VI=[1,166],$VJ=[1,167],$VK=[1,164],$VL=[1,170],$VM=[1,168],$VN=[1,171],$VO=[1,172],$VP=[1,173],$VQ=[1,174],$VR=[1,175],$VS=[1,176],$VT=[5,6,54,62,71,73,75,93,97,98,99,100,101,102,104],$VU=[1,199],$VV=[1,197],$VW=[1,200],$VX=[1,201],$VY=[1,202],$VZ=[1,203],$V_=[1,204],$V$=[1,205],$V01=[1,206],$V11=[5,6,54,62,71,73,75,97,98,99,100,101,102,104,105];var parser={trace:function trace(){},yy:{},symbols_:{error:2,main:3,sql_stmt_list:4,EOF:5,SEMICOLON:6,sql_stmt:7,select_stmt:8,insert_stmt:9,update_stmt:10,replace_stmt:11,delete_stmt:12,name:13,LITERAL:14,BRALITERAL:15,database_table_name:16,DOT:17,database_index_name:18,signed_number:19,NUMBER:20,string_literal:21,SINGLE_QUOTED_STRING:22,DOUBLE_QUOTED_STRING:23,XSTRING:24,literal_value:25,"boolean":26,TRUE:27,FALSE:28,boolean_value:29,dynamodb_data_string:30,dynamodb_data_number:31,dynamodb_data_boolean:32,dynamodb_data_null:33,NULL:34,dynamodb_data_undefined:35,UNDEFINED:36,dynamodb_data_array:37,ARRAYLPAR:38,array_list:39,ARRAYRPAR:40,COMMA:41,array_value:42,dynamodb_data_json:43,JSONLPAR:44,dynamodb_data_json_list:45,JSONRPAR:46,dynamodb_data_json_kv:47,COLON:48,INSERT:49,INTO:50,SET:51,def_insert_columns:52,def_insert_onecolumn:53,EQ:54,UPDATE:55,def_update_columns:56,WHERE:57,def_update_where:58,def_update_onecolumn:59,PLUSEQ:60,def_update_where_cond:61,AND:62,REPLACE:63,def_replace_columns:64,def_replace_onecolumn:65,DELETE:66,FROM:67,def_delete_where:68,def_delete_where_cond:69,limit_clause:70,LIMIT:71,sort_clause:72,DESC:73,def_consistent_read:74,CONSISTENT_READ:75,def_select:76,distinct_all:77,DISTINCT:78,ALL:79,def_select_columns:80,def_select_onecolumn:81,STAR:82,AS:83,join_clause:84,table_or_subquery:85,from:86,use_index:87,USE:88,INDEX:89,def_where:90,where_expr:91,def_having:92,HAVING:93,having_expr:94,SELECT:95,bind_parameter:96,OR:97,GT:98,GE:99,LT:100,LE:101,BETWEEN:102,where_between:103,LIKE:104,CONTAINS:105,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",6:"SEMICOLON",14:"LITERAL",15:"BRALITERAL",17:"DOT",20:"NUMBER",22:"SINGLE_QUOTED_STRING",23:"DOUBLE_QUOTED_STRING",24:"XSTRING",27:"TRUE",28:"FALSE",34:"NULL",36:"UNDEFINED",38:"ARRAYLPAR",40:"ARRAYRPAR",41:"COMMA",44:"JSONLPAR",46:"JSONRPAR",48:"COLON",49:"INSERT",50:"INTO",51:"SET",54:"EQ",55:"UPDATE",57:"WHERE",60:"PLUSEQ",62:"AND",63:"REPLACE",66:"DELETE",67:"FROM",71:"LIMIT",73:"DESC",75:"CONSISTENT_READ",78:"DISTINCT",79:"ALL",82:"STAR",83:"AS",88:"USE",89:"INDEX",93:"HAVING",95:"SELECT",96:"bind_parameter",97:"OR",98:"GT",99:"GE",100:"LT",101:"LE",102:"BETWEEN",104:"LIKE",105:"CONTAINS"},productions_:[0,[3,2],[4,3],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[13,1],[16,3],[16,1],[18,1],[19,1],[21,1],[21,1],[21,1],[25,1],[25,1],[26,1],[26,1],[29,1],[29,1],[30,1],[30,1],[31,1],[32,1],[32,1],[33,1],[35,1],[37,3],[39,3],[39,1],[42,0],[42,1],[42,1],[42,1],[42,1],[42,1],[42,1],[43,3],[45,3],[45,1],[47,0],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[9,5],[52,3],[52,1],[53,3],[53,3],[53,3],[53,3],[53,3],[53,3],[10,6],[56,3],[56,1],[59,3],[59,3],[59,3],[59,3],[59,3],[59,3],[59,3],[59,3],[58,1],[58,3],[61,3],[61,3],[11,5],[64,3],[64,1],[65,3],[65,3],[65,3],[65,3],[65,3],[65,3],[12,5],[68,1],[68,3],[69,3],[69,3],[70,0],[70,2],[72,0],[72,1],[74,0],[74,1],[8,4],[77,0],[77,1],[77,1],[80,3],[80,1],[81,1],[81,1],[81,3],[84,1],[85,1],[86,0],[86,2],[87,0],[87,3],[90,2],[90,0],[92,2],[92,0],[76,7],[91,1],[91,1],[91,1],[91,3],[91,3],[91,3],[91,3],[91,3],[91,3],[91,3],[91,3],[91,3],[103,3],[103,3],[94,1],[94,1],[94,1],[94,1],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:this.$=$$[$0-1];return this.$;break;case 2:this.$=$$[$0-2];if($$[$0])this.$.push($$[$0]);break;case 3:case 33:case 43:case 65:case 74:case 89:case 112:case 116:this.$=[$$[$0]];break;case 9:case 14:case 15:case 16:case 17:case 117:case 121:case 127:case 141:case 142:this.$=$$[$0];break;case 10:this.$=$$[$0].substr(1,$$[$0].length-2);break;case 11:this.$={database:$$[$0-2],table:$$[$0]};break;case 12:this.$={table:$$[$0]};break;case 13:this.$={index:$$[$0]};break;case 18:this.$={type:"number",number:$$[$0]};break;case 19:this.$={type:"string",string:$$[$0]};break;case 20:case 27:this.$=true;break;case 21:case 28:this.$=false;break;case 22:this.$={type:"boolean",value:true};break;case 23:this.$={type:"boolean",value:false};break;case 24:case 25:case 26:this.$=eval($$[$0]);break;case 29:this.$=null;break;case 30:this.$="\x00";break;case 31:if($$[$0-1].slice(-1)=="\x00"){this.$=$$[$0-1].slice(0,-1)}else this.$=$$[$0-1];break;case 32:this.$=$$[$0-2];this.$.push($$[$0]);break;case 34:this.$="\x00";break;case 35:case 36:case 37:case 38:case 39:case 40:this.$=$$[$0];break;case 41:var $kv={};if($$[$0-1]){$$[$0-1].map(function(v){if(v)$kv[v[0]]=v[1]})}this.$=$kv;break;case 42:case 64:case 73:case 88:case 111:this.$=$$[$0-2];this.$.push($$[$0]);break;case 44:case 101:case 103:case 105:case 108:case 118:case 120:this.$=undefined;break;case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:this.$=[$$[$0-2],$$[$0]];break;case 63:var $kv={};$$[$0].map(function(v){$kv[v[0]]=v[1]});this.$={statement:"INSERT",set:$kv};yy.extend(this.$,$$[$0-2]);break;case 66:case 67:case 68:case 69:case 70:case 71:case 75:case 76:case 77:case 78:case 79:case 80:case 90:case 91:case 92:case 93:case 94:case 95:this.$=[$$[$0-2],$$[$0]];break;case 72:var $kv=[];$$[$0-2].map(function(v){$kv.push({k:v[0],v:v[1],op:v[2]})});this.$={statement:"UPDATE",set:$kv,where:$$[$0]};yy.extend(this.$,$$[$0-4]);break;case 81:this.$=[$$[$0-2],$$[$0],"+="];break;case 82:this.$=[$$[$0-2],undefined,"delete"];break;case 83:case 97:this.$=[$$[$0]];break;case 84:case 98:this.$=[$$[$0-2],$$[$0]];break;case 85:case 86:case 99:case 100:this.$={k:$$[$0-2],v:$$[$0]};break;case 87:var $kv={};$$[$0].map(function(v){$kv[v[0]]=v[1]});this.$={statement:"REPLACE",set:$kv};yy.extend(this.$,$$[$0-2]);break;case 96:this.$={statement:"DELETE",set:$kv,where:$$[$0]};yy.extend(this.$,$$[$0-2]);break;case 102:this.$={limit:$$[$0]};break;case 104:this.$={sort:"DESC"};break;case 106:this.$={consistent_read:true};break;case 107:this.$={statement:"SELECT",selects:$$[$0-3]};yy.extend(this.$,$$[$0-2]);yy.extend(this.$,$$[$0-1]);yy.extend(this.$,$$[$0]);break;case 109:this.$={distinct:true};break;case 110:this.$={all:true};break;case 113:this.$={type:"star",star:true};break;case 114:this.$={type:"column",column:$$[$0]};break;case 115:this.$={type:"column",column:$$[$0-2],alias:$$[$0]};break;case 119:this.$={from:$$[$0]};break;case 122:this.$={where:$$[$0]};break;case 124:this.$={having:$$[$0]};break;case 126:this.$={columns:$$[$0-4]};yy.extend(this.$,$$[$0-5]);yy.extend(this.$,$$[$0-3]);yy.extend(this.$,$$[$0-2]);yy.extend(this.$,$$[$0-1]);yy.extend(this.$,$$[$0]);break;case 128:case 143:this.$={bind_parameter:$$[$0]};break;case 129:case 144:this.$={column:$$[$0]};break;case 130:case 145:this.$={op:"AND",left:$$[$0-2],right:$$[$0]};break;case 131:case 146:this.$={op:"OR",left:$$[$0-2],right:$$[$0]};break;case 132:case 147:this.$={op:"=",left:$$[$0-2],right:$$[$0]};break;case 133:case 148:this.$={op:">",left:$$[$0-2],right:$$[$0]};break;case 134:case 149:this.$={op:">=",left:$$[$0-2],right:$$[$0]};break;case 135:case 150:this.$={op:"<",left:$$[$0-2],right:$$[$0]};break;case 136:case 151:this.$={op:"<=",left:$$[$0-2],right:$$[$0]};break;case 137:case 152:this.$={op:"BETWEEN",left:$$[$0-2],right:$$[$0]};break;case 138:case 153:this.$={op:"LIKE",left:$$[$0-2],right:{type:"string",string:$$[$0]}};break;case 139:this.$={left:{type:"number",number:$$[$0-2]},right:{type:"number",number:$$[$0]}};break;case 140:this.$={left:{type:"string",string:$$[$0-2]},right:{type:"string",string:$$[$0]}};break;case 154:this.$={op:"CONTAINS",left:$$[$0-2],right:{type:"string",string:$$[$0]}};break;case 155:this.$={op:"CONTAINS",left:$$[$0-2],right:{type:"number",number:$$[$0]}};break;case 156:this.$={op:"CONTAINS",left:$$[$0-2],right:{type:"boolean",value:$$[$0]}};break}},table:[{3:1,4:2,7:3,8:4,9:5,10:6,11:7,12:8,49:$V0,55:$V1,63:$V2,66:$V3,76:9,95:$V4},{1:[3]},{5:[1,15],6:[1,16]},o($V5,[2,3]),o($V5,[2,4]),o($V5,[2,5]),o($V5,[2,6]),o($V5,[2,7]),o($V5,[2,8]),o($V6,[2,103],{72:17,73:[1,18]}),{50:[1,19]},{13:21,14:$V7,15:$V8,16:20},{50:[1,24]},{67:[1,25]},o($V9,[2,108],{77:26,78:[1,27],79:[1,28]}),{1:[2,1]},{7:29,8:4,9:5,10:6,11:7,12:8,49:$V0,55:$V1,63:$V2,66:$V3,76:9,95:$V4},o($Va,[2,101],{70:30,71:[1,31]}),o($V6,[2,104]),{13:21,14:$V7,15:$V8,16:32},{51:[1,33]},o($Vb,[2,12],{17:[1,34]}),o($Vc,[2,9]),o($Vc,[2,10]),{13:21,14:$V7,15:$V8,16:35},{13:21,14:$V7,15:$V8,16:36},{13:40,14:$V7,15:$V8,80:37,81:38,82:$Vd},o($V9,[2,109]),o($V9,[2,110]),o($V5,[2,2]),o($V5,[2,105],{74:41,75:[1,42]}),{19:43,20:$Ve},{51:[1,45]},{13:48,14:$V7,15:$V8,56:46,59:47},{13:49,14:$V7,15:$V8},{51:[1,50]},{57:[1,51]},o($Vf,[2,118],{86:52,41:[1,53],67:[1,54]}),o($Vg,[2,112]),o($Vg,[2,113]),o($Vg,[2,114],{83:[1,55]}),o($V5,[2,107]),o($V5,[2,106]),o($Va,[2,102]),o($Vh,[2,14]),{13:58,14:$V7,15:$V8,52:56,53:57},{41:[1,60],57:[1,59]},o($Vi,[2,74]),{54:[1,61],60:[1,62]},o($Vb,[2,11]),{13:65,14:$V7,15:$V8,64:63,65:64},{13:68,14:$V7,15:$V8,68:66,69:67},o($Vj,[2,120],{87:69,88:[1,70]}),{13:40,14:$V7,15:$V8,81:71,82:$Vd},{13:21,14:$V7,15:$V8,16:74,84:72,85:73},{13:75,14:$V7,15:$V8},o($V5,[2,63],{41:[1,76]}),o($Vk,[2,65]),{54:[1,77]},{13:80,14:$V7,15:$V8,58:78,61:79},{13:48,14:$V7,15:$V8,59:81},{20:$Vl,22:$Vm,23:$Vn,27:$Vo,28:$Vp,30:82,31:83,32:84,33:85,34:$Vq,35:88,36:[1,97],37:87,38:$Vr,43:86,44:$Vs},{20:$Vl,31:98},o($V5,[2,87],{41:[1,99]}),o($Vk,[2,89]),{54:[1,100]},o($V5,[2,96]),o($V5,[2,97],{62:[1,101]}),{54:[1,102]},o($Vt,[2,123],{90:103,57:[1,104]}),{89:[1,105]},o($Vg,[2,111]),o($Vf,[2,119]),o($Vf,[2,116]),o($Vf,[2,117]),o($Vg,[2,115]),{13:58,14:$V7,15:$V8,53:106},{20:$Vl,22:$Vm,23:$Vn,27:$Vo,28:$Vp,30:107,31:108,32:109,33:110,34:$Vq,37:112,38:$Vr,43:111,44:$Vs},o($V5,[2,72]),o($V5,[2,83],{62:[1,113]}),{54:[1,114]},o($Vi,[2,73]),o($Vi,[2,75]),o($Vi,[2,76]),o($Vi,[2,77]),o($Vi,[2,78]),o($Vi,[2,79]),o($Vi,[2,80]),o($Vi,[2,82]),o($Vu,[2,24]),o($Vu,[2,25]),o($Vu,[2,26]),o($Vv,[2,27]),o($Vv,[2,28]),o($Vv,[2,29]),o($Vw,$Vx,{45:115,47:116,13:117,14:$V7,15:$V8,22:$Vy,23:$Vz}),o($VA,$VB,{39:120,42:121,31:122,30:123,32:124,33:125,37:126,43:127,20:$Vl,22:$Vm,23:$Vn,27:$Vo,28:$Vp,34:$Vq,38:$Vr,44:$Vs}),o($Vi,[2,30]),o($Vi,[2,81]),{13:65,14:$V7,15:$V8,65:128},{20:$Vl,22:$Vm,23:$Vn,27:$Vo,28:$Vp,30:129,31:130,32:131,33:132,34:$Vq,37:134,38:$Vr,43:133,44:$Vs},{13:68,14:$V7,15:$V8,69:135},{20:$Vl,22:$Vm,23:$Vn,30:136,31:137},o($VC,[2,125],{92:138,93:[1,139]}),{13:143,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:141,91:140,96:$VG},{13:150,14:$V7,15:$V8,18:149},o($Vk,[2,64]),o($Vk,[2,66]),o($Vk,[2,67]),o($Vk,[2,68]),o($Vk,[2,69]),o($Vk,[2,70]),o($Vk,[2,71]),{13:80,14:$V7,15:$V8,61:151},{20:$Vl,22:$Vm,23:$Vn,30:152,31:153},{41:[1,155],46:[1,154]},o($Vw,[2,43]),{48:[1,156]},{48:[1,157]},{48:[1,158]},{40:[1,159],41:[1,160]},o($VA,[2,33]),o($VA,[2,35]),o($VA,[2,36]),o($VA,[2,37]),o($VA,[2,38]),o($VA,[2,39]),o($VA,[2,40]),o($Vk,[2,88]),o($Vk,[2,90]),o($Vk,[2,91]),o($Vk,[2,92]),o($Vk,[2,93]),o($Vk,[2,94]),o($Vk,[2,95]),o($V5,[2,98]),o($VH,[2,99]),o($VH,[2,100]),o($VC,[2,126]),{13:165,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:162,27:$VI,28:$VJ,29:163,94:161,96:$VK},o($Vt,[2,122],{54:$VL,62:$VM,97:[1,169],98:$VN,99:$VO,100:$VP,101:$VQ,102:$VR,104:$VS}),o($VT,[2,127]),o($VT,[2,128]),o($VT,[2,129]),o($Vh,[2,18]),o($Vh,[2,19]),o($Vh,[2,15]),o($Vh,[2,16]),o($Vh,[2,17]),o($Vj,[2,121]),o($Vj,[2,13]),o($V5,[2,84]),o($VH,[2,85]),o($VH,[2,86]),o($Vv,[2,41]),o($Vw,$Vx,{13:117,47:177,14:$V7,15:$V8,22:$Vy,23:$Vz}),{20:$Vl,22:$Vm,23:$Vn,27:$Vo,28:$Vp,30:179,31:178,32:180,33:181,34:$Vq,37:182,38:$Vr,43:183,44:$Vs},{20:$Vl,22:$Vm,23:$Vn,27:$Vo,28:$Vp,30:185,31:184,32:186,33:187,34:$Vq,37:188,38:$Vr,43:189,44:$Vs},{20:$Vl,22:$Vm,23:$Vn,27:$Vo,28:$Vp,30:191,31:190,32:192,33:193,34:$Vq,37:194,38:$Vr,43:195,44:$Vs},o($Vv,[2,31]),o($VA,$VB,{31:122,30:123,32:124,33:125,37:126,43:127,42:196,20:$Vl,22:$Vm,23:$Vn,27:$Vo,28:$Vp,34:$Vq,38:$Vr,44:$Vs}),o($VC,[2,124],{54:$VU,62:$VV,97:[1,198],98:$VW,99:$VX,100:$VY,101:$VZ,102:$V_,104:$V$,105:$V01}),o($V11,[2,141]),o($V11,[2,142]),o($V11,[2,143]),o($V11,[2,144]),o($V11,[2,22]),o($V11,[2,23]),{13:143,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:141,91:207,96:$VG},{13:143,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:141,91:208,96:$VG},{13:143,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:141,91:209,96:$VG},{13:143,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:141,91:210,96:$VG},{13:143,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:141,91:211,96:$VG},{13:143,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:141,91:212,96:$VG},{13:143,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:141,91:213,96:$VG},{19:215,20:$Ve,21:216,22:$VD,23:$VE,24:$VF,103:214},{21:217,22:$VD,23:$VE,24:$VF},o($Vw,[2,42]),o($Vw,[2,45]),o($Vw,[2,48]),o($Vw,[2,51]),o($Vw,[2,54]),o($Vw,[2,57]),o($Vw,[2,60]),o($Vw,[2,46]),o($Vw,[2,49]),o($Vw,[2,52]),o($Vw,[2,55]),o($Vw,[2,58]),o($Vw,[2,61]),o($Vw,[2,47]),o($Vw,[2,50]),o($Vw,[2,53]),o($Vw,[2,56]),o($Vw,[2,59]),o($Vw,[2,62]),o($VA,[2,32]),{13:165,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:162,27:$VI,28:$VJ,29:163,94:218,96:$VK},{13:165,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:162,27:$VI,28:$VJ,29:163,94:219,96:$VK},{13:165,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:162,27:$VI,28:$VJ,29:163,94:220,96:$VK},{13:165,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:162,27:$VI,28:$VJ,29:163,94:221,96:$VK},{13:165,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:162,27:$VI,28:$VJ,29:163,94:222,96:$VK},{13:165,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:162,27:$VI,28:$VJ,29:163,94:223,96:$VK},{13:165,14:$V7,15:$V8,19:144,20:$Ve,21:145,22:$VD,23:$VE,24:$VF,25:162,27:$VI,28:$VJ,29:163,94:224,96:$VK},{19:215,20:$Ve,21:216,22:$VD,23:$VE,24:$VF,103:225},{21:226,22:$VD,23:$VE,24:$VF},{19:228,20:$Ve,21:227,22:$VD,23:$VE,24:$VF,27:$VI,28:$VJ,29:229},o([5,6,62,71,73,75,93,97],[2,130],{54:$VL,98:$VN,99:$VO,100:$VP,101:$VQ,102:$VR,104:$VS}),o([5,6,71,73,75,93,97],[2,131],{54:$VL,62:$VM,98:$VN,99:$VO,100:$VP,101:$VQ,102:$VR,104:$VS}),o([5,6,54,62,71,73,75,93,97,102,104],[2,132],{98:$VN,99:$VO,100:$VP,101:$VQ}),o($VT,[2,133]),o($VT,[2,134]),o($VT,[2,135]),o($VT,[2,136]),o($VT,[2,137]),{62:[1,230]},{62:[1,231]},o($VT,[2,138]),o([5,6,62,71,73,75,97],[2,145],{54:$VU,98:$VW,99:$VX,100:$VY,101:$VZ,102:$V_,104:$V$,105:$V01}),o([5,6,71,73,75,97],[2,146],{54:$VU,62:$VV,98:$VW,99:$VX,100:$VY,101:$VZ,102:$V_,104:$V$,105:$V01}),o([5,6,54,62,71,73,75,97,102,104,105],[2,147],{98:$VW,99:$VX,100:$VY,101:$VZ}),o($V11,[2,148]),o($V11,[2,149]),o($V11,[2,150]),o($V11,[2,151]),o($V11,[2,152]),o($V11,[2,153]),o($V11,[2,154]),o($V11,[2,155]),o($V11,[2,156]),{19:232,20:$Ve},{21:233,22:$VD,23:$VE,24:$VF},o($Vh,[2,139]),o($Vh,[2,140])],defaultActions:{15:[2,1]},parseError:function parseError(str,hash){if(hash.recoverable){this.trace(str)}else{var error=new Error(str);error.hash=hash;throw error}},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;var args=lstack.slice.call(arguments,1);var lexer=Object.create(this.lexer);var sharedState={yy:{}};for(var k in this.yy){if(Object.prototype.hasOwnProperty.call(this.yy,k)){sharedState.yy[k]=this.yy[k]}}lexer.setInput(input,sharedState.yy);sharedState.yy.lexer=lexer;sharedState.yy.parser=this;if(typeof lexer.yylloc=="undefined"){lexer.yylloc={}}var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;if(typeof sharedState.yy.parseError==="function"){this.parseError=sharedState.yy.parseError}else{this.parseError=Object.getPrototypeOf(this).parseError}function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n}_token_stack:var lex=function(){var token;token=lexer.lex()||EOF;if(typeof token!=="number"){token=self.symbols_[token]||token}return token};var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state]){action=this.defaultActions[state]}else{if(symbol===null||typeof symbol=="undefined"){symbol=lex()}action=table[state]&&table[state][symbol]}if(typeof action==="undefined"||!action.length||!action[0]){var errStr="";expected=[];for(p in table[state]){if(this.terminals_[p]&&p>TERROR){expected.push("'"+this.terminals_[p]+"'")}}if(lexer.showPosition){errStr="Parse error on line "+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'"}else{errStr="Parse error on line "+(yylineno+1)+": Unexpected "+(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'")}this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1){throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol)}switch(action[0]){case 1:stack.push(symbol);vstack.push(lexer.yytext);lstack.push(lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=lexer.yyleng;yytext=lexer.yytext;yylineno=lexer.yylineno;yyloc=lexer.yylloc;if(recovering>0){recovering--}}else{symbol=preErrorSymbol;preErrorSymbol=null}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges){yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]}r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args));if(typeof r!=="undefined"){return r}if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len)}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true}}return true}};var lexer=function(){var lexer={EOF:1,parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash)}else{throw new Error(str)}},setInput:function(input,yy){this.yy=yy||this.yy||{};this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match="";this.conditionStack=["INITIAL"];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0]}this.offset=0;return this},input:function(){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++}else{this.yylloc.last_column++}if(this.options.ranges){this.yylloc.range[1]++}this._input=this._input.slice(1);return ch},unput:function(ch){var len=ch.length;var lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len);this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len]}this.yyleng=this.yytext.length;return this},more:function(){this._more=true;return this},reject:function(){if(this.options.backtrack_lexer){this._backtrack=true}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}return this},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length)}return(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var pre=this.pastInput();var c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^"},test_match:function(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0)}}lines=match[0].match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno+=lines.length}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng]}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false}if(token){return token}else if(this._backtrack){for(var k in backup){this[k]=backup[k]}return false}return false},next:function(){if(this.done){return this.EOF}if(!this._input){this.done=true}var token,match,tempMatch,index;if(!this._more){this.yytext="";this.match=""}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token}else if(this._backtrack){match=false;continue}else{return false}}else if(!this.options.flex){break}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token}return false}if(this._input===""){return this.EOF}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}},lex:function lex(){var r=this.next();if(r){return r}else{return this.lex()}},begin:function begin(condition){this.conditionStack.push(condition)},popState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop()}else{return this.conditionStack[0]}},_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules}else{return this.conditions["INITIAL"].rules}},topState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n]}else{return"INITIAL"}},pushState:function pushState(condition){this.begin(condition)},stateStackSize:function stateStackSize(){return this.conditionStack.length},options:{"case-insensitive":true},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:return 15;break;case 1:return 22;break;case 2:return 23;break;case 3:break;case 4:break;case 5:return"ABORT";break;case 6:return"ADD";break;case 7:return"AFTER";break;case 8:return 79;break;case 9:return"ALTER";break;case 10:return"ANALYZE";break;case 11:return 62;break;case 12:return 83;break;case 13:return"ASC";break;case 14:return"ATTACH";break;case 15:return"BEFORE";break;case 16:return"BEGIN";break;case 17:return 102;break;case 18:return"BY";break;case 19:return"CASCADE";break;case 20:return"CASE";break;case 21:return"CAST";break;case 22:return"CHECK";break;case 23:return"COLLATE";break;case 24:return"COLUMN";break;case 25:return"CONFLICT";break;case 26:return 75;break;case 27:return"CONSTRAINT";break;case 28:return"CREATE";break;case 29:return"CROSS";break;case 30:return"CURRENT DATE";break;case 31:return"CURRENT TIME";break;case 32:return"CURRENT TIMESTAMP";break;case 33:return"DATABASE";break;case 34:return"DEFAULT";break;case 35:return"DEFERRABLE";break;case 36:return"DEFERRED";break;case 37:return 66;break;case 38:return 73;break;case 39:return"DETACH";break;case 40:return 78;break;case 41:return"DROP";break;case 42:return"EACH";break;case 43:return"ELSE";break;case 44:return"END";break;case 45:return"ESCAPE";break;case 46:return"EXCEPT";break;case 47:return"EXCLUSIVE";break;case 48:return"EXISTS";break;case 49:return"EXPLAIN";break;case 50:return"FAIL";break;case 51:return"FOR";break;case 52:return"FOREIGN";break;case 53:return 67;break;case 54:return"FULL";break;case 55:return"GLOB";break;case 56:return"GROUP";break;case 57:return 93;break;case 58:return"IF";break;case 59:return"IGNORE";break;case 60:return"IMMEDIATE";break;case 61:return"IN";break;case 62:return 88;break;case 63:return 89;break;case 64:return"INDEXED";break;case 65:return"INITIALLY";break;case 66:return"INNER";break;case 67:return 49;break;case 68:return"INSTEAD";break;case 69:return"INTERSECT";break;case 70:return 50;break;case 71:return"IS";break;case 72:return"ISNULL";break;case 73:return"JOIN";break;case 74:return"KEY";break;case 75:return"LEFT";break;case 76:return 104;break;case 77:return 105;break;case 78:return 71;break;case 79:return"MATCH";break;case 80:return"NATURAL";break;case 81:return"NO";break;case 82:return"NOT";break;case 83:return"NOTNULL";break;case 84:return 34;break;case 85:return 36;break;case 86:return"OF";break;case 87:return"OFFSET";break;case 88:return"ON";break;case 89:return 97;break;case 90:return"ORDER";break;case 91:return"OUTER";break;case 92:return"PLAN";break;case 93:return"PRAGMA";break;case 94:return"PRIMARY";break;case 95:return"QUERY";break;case 96:return"RAISE";break;case 97:return"RECURSIVE";break;case 98:return"REFERENCES";break;case 99:return"REGEXP";break;case 100:return"REINDEX";break;case 101:return"RELEASE";break;case 102:return"RENAME";break;case 103:return 63;break;case 104:return"RESTRICT";break;case 105:return"RIGHT";break;case 106:return"ROLLBACK";break;case 107:return"ROW";break;case 108:return 95;break;case 109:return 51;break;case 110:return"TABLE";break;case 111:return"TEMP";break;case 112:return"THEN";break;case 113:return"TO";break;case 114:return"TRIGGER";break;case 115:return"UNION";break;case 116:return"UNIQUE";break;case 117:return 55;break;case 118:return"USING";break;case 119:return"VACUUM";break;case 120:return"VALUES";break;case 121:return"VIEW";break;case 122:return"WHEN";break;case 123:return 57;break;case 124:return"WITH";break;case 125:return 27;break;case 126:return 28;break;case 127:return 20;break;case 128:return 20;break;case 129:return"TILDEs";break;case 130:return 60;break;case 131:return"PLUS";break;case 132:return"MINUS";break;case 133:return 82;break;case 134:return"SLASH";break;case 135:return"REM";break;case 136:return"RSHIFT";break;case 137:return"LSHIFT";break;case 138:return"NE";break;case 139:return"NE";break;case 140:return 99;break;case 141:return 98;break;case 142:return 101;break;case 143:return 100;break;case 144:return 54;break;case 145:return"BITAND";break;case 146:return"BITOR";break;case 147:return"LPAR";break;case 148:return"RPAR";break;case 149:return 44;break;case 150:return 46;break;case 151:return 38;break;case 152:return 40;break;case 153:return 17;break;case 154:return 41;break;case 155:return 48;break;case 156:return 6;break;case 157:return"DOLLAR";break;case 158:return"QUESTION";break;case 159:return"CARET";break;case 160:return 14;break;case 161:return 5;break;case 162:return"INVALID";break}},rules:[/^(?:([`](\\.|[^"]|\\")*?[`])+)/i,/^(?:(['](\\.|[^']|\\')*?['])+)/i,/^(?:(["](\\.|[^"]|\\")*?["])+)/i,/^(?:--(.*?)($|\r\n|\r|\n))/i,/^(?:\s+)/i,/^(?:ABORT\b)/i,/^(?:ADD\b)/i,/^(?:AFTER\b)/i,/^(?:ALL\b)/i,/^(?:ALTER\b)/i,/^(?:ANALYZE\b)/i,/^(?:AND\b)/i,/^(?:AS\b)/i,/^(?:ASC\b)/i,/^(?:ATTACH\b)/i,/^(?:BEFORE\b)/i,/^(?:BEGIN\b)/i,/^(?:BETWEEN\b)/i,/^(?:BY\b)/i,/^(?:CASCADE\b)/i,/^(?:CASE\b)/i,/^(?:CAST\b)/i,/^(?:CHECK\b)/i,/^(?:COLLATE\b)/i,/^(?:COLUMN\b)/i,/^(?:CONFLICT\b)/i,/^(?:CONSISTENT_READ\b)/i,/^(?:CONSTRAINT\b)/i,/^(?:CREATE\b)/i,/^(?:CROSS\b)/i,/^(?:CURRENT_DATE\b)/i,/^(?:CURRENT_TIME\b)/i,/^(?:CURRENT_TIMESTAMP\b)/i,/^(?:DATABASE\b)/i,/^(?:DEFAULT\b)/i,/^(?:DEFERRABLE\b)/i,/^(?:DEFERRED\b)/i,/^(?:DELETE\b)/i,/^(?:DESC\b)/i,/^(?:DETACH\b)/i,/^(?:DISTINCT\b)/i,/^(?:DROP\b)/i,/^(?:EACH\b)/i,/^(?:ELSE\b)/i,/^(?:END\b)/i,/^(?:ESCAPE\b)/i,/^(?:EXCEPT\b)/i,/^(?:EXCLUSIVE\b)/i,/^(?:EXISTS\b)/i,/^(?:EXPLAIN\b)/i,/^(?:FAIL\b)/i,/^(?:FOR\b)/i,/^(?:FOREIGN\b)/i,/^(?:FROM\b)/i,/^(?:FULL\b)/i,/^(?:GLOB\b)/i,/^(?:GROUP\b)/i,/^(?:HAVING\b)/i,/^(?:IF\b)/i,/^(?:IGNORE\b)/i,/^(?:IMMEDIATE\b)/i,/^(?:IN\b)/i,/^(?:USE\b)/i,/^(?:INDEX\b)/i,/^(?:INDEXED\b)/i,/^(?:INITIALLY\b)/i,/^(?:INNER\b)/i,/^(?:INSERT\b)/i,/^(?:INSTEAD\b)/i,/^(?:INTERSECT\b)/i,/^(?:INTO\b)/i,/^(?:IS\b)/i,/^(?:ISNULL\b)/i,/^(?:JOIN\b)/i,/^(?:KEY\b)/i,/^(?:LEFT\b)/i,/^(?:LIKE\b)/i,/^(?:CONTAINS\b)/i,/^(?:LIMIT\b)/i,/^(?:MATCH\b)/i,/^(?:NATURAL\b)/i,/^(?:NO\b)/i,/^(?:NOT\b)/i,/^(?:NOTNULL\b)/i,/^(?:NULL\b)/i,/^(?:UNDEFINED\b)/i,/^(?:OF\b)/i,/^(?:OFFSET\b)/i,/^(?:ON\b)/i,/^(?:OR\b)/i,/^(?:ORDER\b)/i,/^(?:OUTER\b)/i,/^(?:PLAN\b)/i,/^(?:PRAGMA\b)/i,/^(?:PRIMARY\b)/i,/^(?:QUERY\b)/i,/^(?:RAISE\b)/i,/^(?:RECURSIVE\b)/i,/^(?:REFERENCES\b)/i,/^(?:REGEXP\b)/i,/^(?:REINDEX\b)/i,/^(?:RELEASE\b)/i,/^(?:RENAME\b)/i,/^(?:REPLACE\b)/i,/^(?:RESTRICT\b)/i,/^(?:RIGHT\b)/i,/^(?:ROLLBACK\b)/i,/^(?:ROW\b)/i,/^(?:SELECT\b)/i,/^(?:SET\b)/i,/^(?:TABLE\b)/i,/^(?:TEMP\b)/i,/^(?:THEN\b)/i,/^(?:TO\b)/i,/^(?:TRIGGER\b)/i,/^(?:UNION\b)/i,/^(?:UNIQUE\b)/i,/^(?:UPDATE\b)/i,/^(?:USING\b)/i,/^(?:VACUUM\b)/i,/^(?:VALUES\b)/i,/^(?:VIEW\b)/i,/^(?:WHEN\b)/i,/^(?:WHERE\b)/i,/^(?:WITH\b)/i,/^(?:TRUE\b)/i,/^(?:FALSE\b)/i,/^(?:[-]?(\d*[.])?\d+[eE]\d+)/i,/^(?:[-]?(\d*[.])?\d+)/i,/^(?:~)/i,/^(?:\+=)/i,/^(?:\+)/i,/^(?:-)/i,/^(?:\*)/i,/^(?:\/)/i,/^(?:%)/i,/^(?:>>)/i,/^(?:<<)/i,/^(?:<>)/i,/^(?:!=)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:<)/i,/^(?:=)/i,/^(?:&)/i,/^(?:\|)/i,/^(?:\()/i,/^(?:\))/i,/^(?:\{)/i,/^(?:\})/i,/^(?:\[)/i,/^(?:\])/i,/^(?:\.)/i,/^(?:,)/i,/^(?::)/i,/^(?:;)/i,/^(?:\$)/i,/^(?:\?)/i,/^(?:\^)/i,/^(?:[a-zA-Z_][a-zA-Z_0-9]*)/i,/^(?:$)/i,/^(?:.)/i],
conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],inclusive:true}}};return lexer}();parser.lexer=lexer;function Parser(){this.yy={}}Parser.prototype=parser;parser.Parser=Parser;return new Parser}();if(typeof require!=="undefined"&&typeof exports!=="undefined"){exports.parser=parserV2;exports.Parser=parserV2.Parser;exports.parse=function(){return parserV2.parse.apply(parserV2,arguments)};exports.main=function commonjsMain(args){if(!args[1]){console.log("Usage: "+args[0]+" FILE");process.exit(1)}var source=require("fs").readFileSync(require("path").normalize(args[1]),"utf8");return exports.parser.parse(source)};if(typeof module!=="undefined"&&require.main===module){exports.main(process.argv.slice(1))}}