var parserV2=function(){var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,13],$V1=[1,14],$V2=[1,15],$V3=[1,16],$V4=[1,20],$V5=[1,17],$V6=[1,18],$V7=[1,19],$V8=[5,6],$V9=[5,6,74,78],$Va=[1,28],$Vb=[1,29],$Vc=[17,18,85],$Vd=[5,6,78],$Ve=[5,6,54,60,74,76,78,91,96],$Vf=[5,6,20,44,51,54,57,60,63,65,70,74,76,78,86,91,96,100,101,102,103,104,105,107,108],$Vg=[1,50],$Vh=[1,55],$Vi=[5,6,60,74,76,78,91,96],$Vj=[5,6,44,60,70,74,76,78,91,96],$Vk=[5,6,57,65,74,76,78,96,100,101,102,103,104,105,107,108],$Vl=[44,60],$Vm=[5,6,60,74,76,78,96],$Vn=[5,6,44],$Vo=[1,102],$Vp=[1,100],$Vq=[1,101],$Vr=[1,103],$Vs=[1,104],$Vt=[1,105],$Vu=[1,107],$Vv=[1,106],$Vw=[5,6,74,76,78,96],$Vx=[5,6,43,44,49,60,65],$Vy=[5,6,43,44,49,60],$Vz=[44,49],$VA=[2,47],$VB=[1,129],$VC=[1,130],$VD=[43,44],$VE=[2,37],$VF=[5,6,74,76,78],$VG=[1,157],$VH=[1,158],$VI=[1,159],$VJ=[1,153],$VK=[5,6,65],$VL=[1,177],$VM=[1,178],$VN=[1,175],$VO=[1,181],$VP=[1,179],$VQ=[1,182],$VR=[1,183],$VS=[1,184],$VT=[1,185],$VU=[1,186],$VV=[1,187],$VW=[5,6,57,65,74,76,78,96,100,101,102,103,104,105,107],$VX=[1,210],$VY=[1,208],$VZ=[1,211],$V_=[1,212],$V$=[1,213],$V01=[1,214],$V11=[1,215],$V21=[1,216],$V31=[1,217],$V41=[5,6,57,65,74,76,78,100,101,102,103,104,105,107,108];var parser={trace:function trace(){},yy:{},symbols_:{error:2,main:3,sql_stmt_list:4,EOF:5,SEMICOLON:6,sql_stmt:7,select_stmt:8,insert_stmt:9,update_stmt:10,replace_stmt:11,delete_stmt:12,show_tables_stmt:13,drop_table_stmt:14,describe_table_stmt:15,name:16,LITERAL:17,BRALITERAL:18,database_table_name:19,DOT:20,database_index_name:21,signed_number:22,NUMBER:23,string_literal:24,SINGLE_QUOTED_STRING:25,DOUBLE_QUOTED_STRING:26,XSTRING:27,literal_value:28,"boolean":29,TRUE:30,FALSE:31,boolean_value:32,dynamodb_data_string:33,dynamodb_data_number:34,dynamodb_data_boolean:35,dynamodb_data_null:36,NULL:37,dynamodb_data_undefined:38,UNDEFINED:39,dynamodb_data_array:40,ARRAYLPAR:41,array_list:42,ARRAYRPAR:43,COMMA:44,array_value:45,dynamodb_data_json:46,JSONLPAR:47,dynamodb_data_json_list:48,JSONRPAR:49,dynamodb_data_json_kv:50,COLON:51,INSERT:52,INTO:53,SET:54,def_insert_columns:55,def_insert_onecolumn:56,EQ:57,UPDATE:58,def_update_columns:59,WHERE:60,def_update_where:61,def_update_onecolumn:62,PLUSEQ:63,def_update_where_cond:64,AND:65,REPLACE:66,def_replace_columns:67,def_replace_onecolumn:68,DELETE:69,FROM:70,def_delete_where:71,def_delete_where_cond:72,limit_clause:73,LIMIT:74,sort_clause:75,DESC:76,def_consistent_read:77,CONSISTENT_READ:78,def_select:79,distinct_all:80,DISTINCT:81,ALL:82,def_select_columns:83,def_select_onecolumn:84,STAR:85,AS:86,join_clause:87,table_or_subquery:88,from:89,use_index:90,USE:91,INDEX:92,def_where:93,where_expr:94,def_having:95,HAVING:96,having_expr:97,SELECT:98,bind_parameter:99,OR:100,GT:101,GE:102,LT:103,LE:104,BETWEEN:105,where_between:106,LIKE:107,CONTAINS:108,SHOW:109,TABLES:110,DROP:111,TABLE:112,DESCRIBE:113,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",6:"SEMICOLON",17:"LITERAL",18:"BRALITERAL",20:"DOT",23:"NUMBER",25:"SINGLE_QUOTED_STRING",26:"DOUBLE_QUOTED_STRING",27:"XSTRING",30:"TRUE",31:"FALSE",37:"NULL",39:"UNDEFINED",41:"ARRAYLPAR",43:"ARRAYRPAR",44:"COMMA",47:"JSONLPAR",49:"JSONRPAR",51:"COLON",52:"INSERT",53:"INTO",54:"SET",57:"EQ",58:"UPDATE",60:"WHERE",63:"PLUSEQ",65:"AND",66:"REPLACE",69:"DELETE",70:"FROM",74:"LIMIT",76:"DESC",78:"CONSISTENT_READ",81:"DISTINCT",82:"ALL",85:"STAR",86:"AS",91:"USE",92:"INDEX",96:"HAVING",98:"SELECT",99:"bind_parameter",100:"OR",101:"GT",102:"GE",103:"LT",104:"LE",105:"BETWEEN",107:"LIKE",108:"CONTAINS",109:"SHOW",110:"TABLES",111:"DROP",112:"TABLE",113:"DESCRIBE"},productions_:[0,[3,2],[4,3],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[16,1],[16,1],[19,3],[19,1],[21,1],[22,1],[24,1],[24,1],[24,1],[28,1],[28,1],[29,1],[29,1],[32,1],[32,1],[33,1],[33,1],[34,1],[35,1],[35,1],[36,1],[38,1],[40,3],[42,3],[42,1],[45,0],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[46,3],[48,3],[48,1],[50,0],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[50,3],[9,5],[55,3],[55,1],[56,3],[56,3],[56,3],[56,3],[56,3],[56,3],[10,6],[59,3],[59,1],[62,3],[62,3],[62,3],[62,3],[62,3],[62,3],[62,3],[62,3],[61,1],[61,3],[64,3],[64,3],[11,5],[67,3],[67,1],[68,3],[68,3],[68,3],[68,3],[68,3],[68,3],[12,5],[71,1],[71,3],[72,3],[72,3],[73,0],[73,2],[75,0],[75,1],[77,0],[77,1],[8,4],[80,0],[80,1],[80,1],[83,3],[83,1],[84,1],[84,1],[84,3],[87,1],[88,1],[89,0],[89,2],[90,0],[90,3],[93,2],[93,0],[95,2],[95,0],[79,7],[94,1],[94,1],[94,1],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[94,3],[106,3],[106,3],[97,1],[97,1],[97,1],[97,1],[97,3],[97,3],[97,3],[97,3],[97,3],[97,3],[97,3],[97,3],[97,3],[97,3],[97,3],[97,3],[13,2],[14,3],[15,3]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:this.$=$$[$0-1];return this.$;break;case 2:this.$=$$[$0-2];if($$[$0])this.$.push($$[$0]);break;case 3:case 36:case 46:case 68:case 77:case 92:case 115:case 119:this.$=[$$[$0]];break;case 12:case 17:case 18:case 19:case 20:case 120:case 124:case 130:case 144:case 145:this.$=$$[$0];break;case 13:this.$=$$[$0].substr(1,$$[$0].length-2);break;case 14:this.$={database:$$[$0-2],table:$$[$0]};break;case 15:this.$={table:$$[$0]};break;case 16:this.$={index:$$[$0]};break;case 21:this.$={type:"number",number:$$[$0]};break;case 22:this.$={type:"string",string:$$[$0]};break;case 23:case 30:this.$=true;break;case 24:case 31:this.$=false;break;case 25:this.$={type:"boolean",value:true};break;case 26:this.$={type:"boolean",value:false};break;case 27:case 28:case 29:this.$=eval($$[$0]);break;case 32:this.$=null;break;case 33:this.$="\x00";break;case 34:if($$[$0-1].slice(-1)=="\x00"){this.$=$$[$0-1].slice(0,-1)}else this.$=$$[$0-1];break;case 35:this.$=$$[$0-2];this.$.push($$[$0]);break;case 37:this.$="\x00";break;case 38:case 39:case 40:case 41:case 42:case 43:this.$=$$[$0];break;case 44:var $kv={};if($$[$0-1]){$$[$0-1].map(function(v){if(v)$kv[v[0]]=v[1]})}this.$=$kv;break;case 45:case 67:case 76:case 91:case 114:this.$=$$[$0-2];this.$.push($$[$0]);break;case 47:case 104:case 106:case 108:case 111:case 121:case 123:this.$=undefined;break;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:this.$=[$$[$0-2],$$[$0]];break;case 66:var $kv={};$$[$0].map(function(v){$kv[v[0]]=v[1]});this.$={statement:"INSERT",set:$kv};yy.extend(this.$,$$[$0-2]);break;case 69:case 70:case 71:case 72:case 73:case 74:case 78:case 79:case 80:case 81:case 82:case 83:case 93:case 94:case 95:case 96:case 97:case 98:this.$=[$$[$0-2],$$[$0]];break;case 75:var $kv=[];$$[$0-2].map(function(v){$kv.push({k:v[0],v:v[1],op:v[2]})});this.$={statement:"UPDATE",set:$kv,where:$$[$0]};yy.extend(this.$,$$[$0-4]);break;case 84:this.$=[$$[$0-2],$$[$0],"+="];break;case 85:this.$=[$$[$0-2],undefined,"delete"];break;case 86:case 100:this.$=[$$[$0]];break;case 87:case 101:this.$=[$$[$0-2],$$[$0]];break;case 88:case 89:case 102:case 103:this.$={k:$$[$0-2],v:$$[$0]};break;case 90:var $kv={};$$[$0].map(function(v){$kv[v[0]]=v[1]});this.$={statement:"REPLACE",set:$kv};yy.extend(this.$,$$[$0-2]);break;case 99:this.$={statement:"DELETE",set:$kv,where:$$[$0]};yy.extend(this.$,$$[$0-2]);break;case 105:this.$={limit:$$[$0]};break;case 107:this.$={sort:"DESC"};break;case 109:this.$={consistent_read:true};break;case 110:this.$={statement:"SELECT",selects:$$[$0-3]};yy.extend(this.$,$$[$0-2]);yy.extend(this.$,$$[$0-1]);yy.extend(this.$,$$[$0]);break;case 112:this.$={distinct:true};break;case 113:this.$={all:true};break;case 116:this.$={type:"star",star:true};break;case 117:this.$={type:"column",column:$$[$0]};break;case 118:this.$={type:"column",column:$$[$0-2],alias:$$[$0]};break;case 122:this.$={from:$$[$0]};break;case 125:this.$={where:$$[$0]};break;case 127:this.$={having:$$[$0]};break;case 129:this.$={columns:$$[$0-4]};yy.extend(this.$,$$[$0-5]);yy.extend(this.$,$$[$0-3]);yy.extend(this.$,$$[$0-2]);yy.extend(this.$,$$[$0-1]);yy.extend(this.$,$$[$0]);break;case 131:case 146:this.$={bind_parameter:$$[$0]};break;case 132:case 147:this.$={column:$$[$0]};break;case 133:case 148:this.$={op:"AND",left:$$[$0-2],right:$$[$0]};break;case 134:case 149:this.$={op:"OR",left:$$[$0-2],right:$$[$0]};break;case 135:case 150:this.$={op:"=",left:$$[$0-2],right:$$[$0]};break;case 136:case 151:this.$={op:">",left:$$[$0-2],right:$$[$0]};break;case 137:case 152:this.$={op:">=",left:$$[$0-2],right:$$[$0]};break;case 138:case 153:this.$={op:"<",left:$$[$0-2],right:$$[$0]};break;case 139:case 154:this.$={op:"<=",left:$$[$0-2],right:$$[$0]};break;case 140:case 155:this.$={op:"BETWEEN",left:$$[$0-2],right:$$[$0]};break;case 141:case 156:this.$={op:"LIKE",left:$$[$0-2],right:{type:"string",string:$$[$0]}};break;case 142:this.$={left:{type:"number",number:$$[$0-2]},right:{type:"number",number:$$[$0]}};break;case 143:this.$={left:{type:"string",string:$$[$0-2]},right:{type:"string",string:$$[$0]}};break;case 157:this.$={op:"CONTAINS",left:$$[$0-2],right:{type:"string",string:$$[$0]}};break;case 158:this.$={op:"CONTAINS",left:$$[$0-2],right:{type:"number",number:$$[$0]}};break;case 159:this.$={op:"CONTAINS",left:$$[$0-2],right:{type:"boolean",value:$$[$0]}};break;case 160:this.$={statement:"SHOW_TABLES"};break;case 161:this.$={statement:"DROP_TABLE"};yy.extend(this.$,$$[$0]);break;case 162:this.$={statement:"DESCRIBE_TABLE"};yy.extend(this.$,$$[$0]);break}},table:[{3:1,4:2,7:3,8:4,9:5,10:6,11:7,12:8,13:9,14:10,15:11,52:$V0,58:$V1,66:$V2,69:$V3,79:12,98:$V4,109:$V5,111:$V6,113:$V7},{1:[3]},{5:[1,21],6:[1,22]},o($V8,[2,3]),o($V8,[2,4]),o($V8,[2,5]),o($V8,[2,6]),o($V8,[2,7]),o($V8,[2,8]),o($V8,[2,9]),o($V8,[2,10]),o($V8,[2,11]),o($V9,[2,106],{75:23,76:[1,24]}),{53:[1,25]},{16:27,17:$Va,18:$Vb,19:26},{53:[1,30]},{70:[1,31]},{110:[1,32]},{112:[1,33]},{112:[1,34]},o($Vc,[2,111],{80:35,81:[1,36],82:[1,37]}),{1:[2,1]},{7:38,8:4,9:5,10:6,11:7,12:8,13:9,14:10,15:11,52:$V0,58:$V1,66:$V2,69:$V3,79:12,98:$V4,109:$V5,111:$V6,113:$V7},o($Vd,[2,104],{73:39,74:[1,40]}),o($V9,[2,107]),{16:27,17:$Va,18:$Vb,19:41},{54:[1,42]},o($Ve,[2,15],{20:[1,43]}),o($Vf,[2,12]),o($Vf,[2,13]),{16:27,17:$Va,18:$Vb,19:44},{16:27,17:$Va,18:$Vb,19:45},o($V8,[2,160]),{16:27,17:$Va,18:$Vb,19:46},{16:27,17:$Va,18:$Vb,19:47},{16:51,17:$Va,18:$Vb,83:48,84:49,85:$Vg},o($Vc,[2,112]),o($Vc,[2,113]),o($V8,[2,2]),o($V8,[2,108],{77:52,78:[1,53]}),{22:54,23:$Vh},{54:[1,56]},{16:59,17:$Va,18:$Vb,59:57,62:58},{16:60,17:$Va,18:$Vb},{54:[1,61]},{60:[1,62]},o($V8,[2,161]),o($V8,[2,162]),o($Vi,[2,121],{89:63,44:[1,64],70:[1,65]}),o($Vj,[2,115]),o($Vj,[2,116]),o($Vj,[2,117],{86:[1,66]}),o($V8,[2,110]),o($V8,[2,109]),o($Vd,[2,105]),o($Vk,[2,17]),{16:69,17:$Va,18:$Vb,55:67,56:68},{44:[1,71],60:[1,70]},o($Vl,[2,77]),{57:[1,72],63:[1,73]},o($Ve,[2,14]),{16:76,17:$Va,18:$Vb,67:74,68:75},{16:79,17:$Va,18:$Vb,71:77,72:78},o($Vm,[2,123],{90:80,91:[1,81]}),{16:51,17:$Va,18:$Vb,84:82,85:$Vg},{16:27,17:$Va,18:$Vb,19:85,87:83,88:84},{16:86,17:$Va,18:$Vb},o($V8,[2,66],{44:[1,87]}),o($Vn,[2,68]),{57:[1,88]},{16:91,17:$Va,18:$Vb,61:89,64:90},{16:59,17:$Va,18:$Vb,62:92},{23:$Vo,25:$Vp,26:$Vq,30:$Vr,31:$Vs,33:93,34:94,35:95,36:96,37:$Vt,38:99,39:[1,108],40:98,41:$Vu,46:97,47:$Vv},{23:$Vo,34:109},o($V8,[2,90],{44:[1,110]}),o($Vn,[2,92]),{57:[1,111]},o($V8,[2,99]),o($V8,[2,100],{65:[1,112]}),{57:[1,113]},o($Vw,[2,126],{93:114,60:[1,115]}),{92:[1,116]},o($Vj,[2,114]),o($Vi,[2,122]),o($Vi,[2,119]),o($Vi,[2,120]),o($Vj,[2,118]),{16:69,17:$Va,18:$Vb,56:117},{23:$Vo,25:$Vp,26:$Vq,30:$Vr,31:$Vs,33:118,34:119,35:120,36:121,37:$Vt,40:123,41:$Vu,46:122,47:$Vv},o($V8,[2,75]),o($V8,[2,86],{65:[1,124]}),{57:[1,125]},o($Vl,[2,76]),o($Vl,[2,78]),o($Vl,[2,79]),o($Vl,[2,80]),o($Vl,[2,81]),o($Vl,[2,82]),o($Vl,[2,83]),o($Vl,[2,85]),o($Vx,[2,27]),o($Vx,[2,28]),o($Vx,[2,29]),o($Vy,[2,30]),o($Vy,[2,31]),o($Vy,[2,32]),o($Vz,$VA,{48:126,50:127,16:128,17:$Va,18:$Vb,25:$VB,26:$VC}),o($VD,$VE,{42:131,45:132,34:133,33:134,35:135,36:136,40:137,46:138,23:$Vo,25:$Vp,26:$Vq,30:$Vr,31:$Vs,37:$Vt,41:$Vu,47:$Vv}),o($Vl,[2,33]),o($Vl,[2,84]),{16:76,17:$Va,18:$Vb,68:139},{23:$Vo,25:$Vp,26:$Vq,30:$Vr,31:$Vs,33:140,34:141,35:142,36:143,37:$Vt,40:145,41:$Vu,46:144,47:$Vv},{16:79,17:$Va,18:$Vb,72:146},{23:$Vo,25:$Vp,26:$Vq,33:147,34:148},o($VF,[2,128],{95:149,96:[1,150]}),{16:154,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:152,94:151,99:$VJ},{16:161,17:$Va,18:$Vb,21:160},o($Vn,[2,67]),o($Vn,[2,69]),o($Vn,[2,70]),o($Vn,[2,71]),o($Vn,[2,72]),o($Vn,[2,73]),o($Vn,[2,74]),{16:91,17:$Va,18:$Vb,64:162},{23:$Vo,25:$Vp,26:$Vq,33:163,34:164},{44:[1,166],49:[1,165]},o($Vz,[2,46]),{51:[1,167]},{51:[1,168]},{51:[1,169]},{43:[1,170],44:[1,171]},o($VD,[2,36]),o($VD,[2,38]),o($VD,[2,39]),o($VD,[2,40]),o($VD,[2,41]),o($VD,[2,42]),o($VD,[2,43]),o($Vn,[2,91]),o($Vn,[2,93]),o($Vn,[2,94]),o($Vn,[2,95]),o($Vn,[2,96]),o($Vn,[2,97]),o($Vn,[2,98]),o($V8,[2,101]),o($VK,[2,102]),o($VK,[2,103]),o($VF,[2,129]),{16:176,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:173,30:$VL,31:$VM,32:174,97:172,99:$VN},o($Vw,[2,125],{57:$VO,65:$VP,100:[1,180],101:$VQ,102:$VR,103:$VS,104:$VT,105:$VU,107:$VV}),o($VW,[2,130]),o($VW,[2,131]),o($VW,[2,132]),o($Vk,[2,21]),o($Vk,[2,22]),o($Vk,[2,18]),o($Vk,[2,19]),o($Vk,[2,20]),o($Vm,[2,124]),o($Vm,[2,16]),o($V8,[2,87]),o($VK,[2,88]),o($VK,[2,89]),o($Vy,[2,44]),o($Vz,$VA,{16:128,50:188,17:$Va,18:$Vb,25:$VB,26:$VC}),{23:$Vo,25:$Vp,26:$Vq,30:$Vr,31:$Vs,33:190,34:189,35:191,36:192,37:$Vt,40:193,41:$Vu,46:194,47:$Vv},{23:$Vo,25:$Vp,26:$Vq,30:$Vr,31:$Vs,33:196,34:195,35:197,36:198,37:$Vt,40:199,41:$Vu,46:200,47:$Vv},{23:$Vo,25:$Vp,26:$Vq,30:$Vr,31:$Vs,33:202,34:201,35:203,36:204,37:$Vt,40:205,41:$Vu,46:206,47:$Vv},o($Vy,[2,34]),o($VD,$VE,{34:133,33:134,35:135,36:136,40:137,46:138,45:207,23:$Vo,25:$Vp,26:$Vq,30:$Vr,31:$Vs,37:$Vt,41:$Vu,47:$Vv}),o($VF,[2,127],{57:$VX,65:$VY,100:[1,209],101:$VZ,102:$V_,103:$V$,104:$V01,105:$V11,107:$V21,108:$V31}),o($V41,[2,144]),o($V41,[2,145]),o($V41,[2,146]),o($V41,[2,147]),o($V41,[2,25]),o($V41,[2,26]),{16:154,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:152,94:218,99:$VJ},{16:154,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:152,94:219,99:$VJ},{16:154,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:152,94:220,99:$VJ},{16:154,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:152,94:221,99:$VJ},{16:154,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:152,94:222,99:$VJ},{16:154,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:152,94:223,99:$VJ},{16:154,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:152,94:224,99:$VJ},{22:226,23:$Vh,24:227,25:$VG,26:$VH,27:$VI,106:225},{24:228,25:$VG,26:$VH,27:$VI},o($Vz,[2,45]),o($Vz,[2,48]),o($Vz,[2,51]),o($Vz,[2,54]),o($Vz,[2,57]),o($Vz,[2,60]),o($Vz,[2,63]),o($Vz,[2,49]),o($Vz,[2,52]),o($Vz,[2,55]),o($Vz,[2,58]),o($Vz,[2,61]),o($Vz,[2,64]),o($Vz,[2,50]),o($Vz,[2,53]),o($Vz,[2,56]),o($Vz,[2,59]),o($Vz,[2,62]),o($Vz,[2,65]),o($VD,[2,35]),{16:176,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:173,30:$VL,31:$VM,32:174,97:229,99:$VN},{16:176,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:173,30:$VL,31:$VM,32:174,97:230,99:$VN},{16:176,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:173,30:$VL,31:$VM,32:174,97:231,99:$VN},{16:176,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:173,30:$VL,31:$VM,32:174,97:232,99:$VN},{16:176,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:173,30:$VL,31:$VM,32:174,97:233,99:$VN},{16:176,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:173,30:$VL,31:$VM,32:174,97:234,99:$VN},{16:176,17:$Va,18:$Vb,22:155,23:$Vh,24:156,25:$VG,26:$VH,27:$VI,28:173,30:$VL,31:$VM,32:174,97:235,99:$VN},{22:226,23:$Vh,24:227,25:$VG,26:$VH,27:$VI,106:236},{24:237,25:$VG,26:$VH,27:$VI},{22:239,23:$Vh,24:238,25:$VG,26:$VH,27:$VI,30:$VL,31:$VM,32:240},o([5,6,65,74,76,78,96,100],[2,133],{57:$VO,101:$VQ,102:$VR,103:$VS,104:$VT,105:$VU,107:$VV}),o([5,6,74,76,78,96,100],[2,134],{57:$VO,65:$VP,101:$VQ,102:$VR,103:$VS,104:$VT,105:$VU,107:$VV}),o([5,6,57,65,74,76,78,96,100,105,107],[2,135],{101:$VQ,102:$VR,103:$VS,104:$VT}),o($VW,[2,136]),o($VW,[2,137]),o($VW,[2,138]),o($VW,[2,139]),o($VW,[2,140]),{65:[1,241]},{65:[1,242]},o($VW,[2,141]),o([5,6,65,74,76,78,100],[2,148],{57:$VX,101:$VZ,102:$V_,103:$V$,104:$V01,105:$V11,107:$V21,108:$V31}),o([5,6,74,76,78,100],[2,149],{57:$VX,65:$VY,101:$VZ,102:$V_,103:$V$,104:$V01,105:$V11,107:$V21,108:$V31}),o([5,6,57,65,74,76,78,100,105,107,108],[2,150],{101:$VZ,102:$V_,103:$V$,104:$V01}),o($V41,[2,151]),o($V41,[2,152]),o($V41,[2,153]),o($V41,[2,154]),o($V41,[2,155]),o($V41,[2,156]),o($V41,[2,157]),o($V41,[2,158]),o($V41,[2,159]),{22:243,23:$Vh},{24:244,25:$VG,26:$VH,27:$VI},o($Vk,[2,142]),o($Vk,[2,143])],defaultActions:{21:[2,1]},parseError:function parseError(str,hash){if(hash.recoverable){this.trace(str)}else{var error=new Error(str);error.hash=hash;throw error}},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;var args=lstack.slice.call(arguments,1);var lexer=Object.create(this.lexer);var sharedState={yy:{}};for(var k in this.yy){if(Object.prototype.hasOwnProperty.call(this.yy,k)){sharedState.yy[k]=this.yy[k]}}lexer.setInput(input,sharedState.yy);sharedState.yy.lexer=lexer;sharedState.yy.parser=this;if(typeof lexer.yylloc=="undefined"){lexer.yylloc={}}var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;if(typeof sharedState.yy.parseError==="function"){this.parseError=sharedState.yy.parseError}else{this.parseError=Object.getPrototypeOf(this).parseError}function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n}_token_stack:var lex=function(){var token;token=lexer.lex()||EOF;if(typeof token!=="number"){token=self.symbols_[token]||token}return token};var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state]){action=this.defaultActions[state]}else{if(symbol===null||typeof symbol=="undefined"){symbol=lex()}action=table[state]&&table[state][symbol]}if(typeof action==="undefined"||!action.length||!action[0]){var errStr="";expected=[];for(p in table[state]){if(this.terminals_[p]&&p>TERROR){expected.push("'"+this.terminals_[p]+"'")}}if(lexer.showPosition){errStr="Parse error on line "+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'"}else{errStr="Parse error on line "+(yylineno+1)+": Unexpected "+(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'")}this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1){throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol)}switch(action[0]){case 1:stack.push(symbol);vstack.push(lexer.yytext);lstack.push(lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=lexer.yyleng;yytext=lexer.yytext;yylineno=lexer.yylineno;yyloc=lexer.yylloc;if(recovering>0){recovering--}}else{symbol=preErrorSymbol;preErrorSymbol=null}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges){yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]}r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args));if(typeof r!=="undefined"){return r}if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len)}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true}}return true}};var lexer=function(){var lexer={EOF:1,parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash)}else{throw new Error(str)}},setInput:function(input,yy){this.yy=yy||this.yy||{};this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match="";this.conditionStack=["INITIAL"];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0]}this.offset=0;return this},input:function(){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++}else{this.yylloc.last_column++}if(this.options.ranges){this.yylloc.range[1]++}this._input=this._input.slice(1);return ch},unput:function(ch){var len=ch.length;var lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len);this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len]}this.yyleng=this.yytext.length;return this},more:function(){this._more=true;return this},reject:function(){if(this.options.backtrack_lexer){this._backtrack=true}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}return this},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length)}return(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var pre=this.pastInput();var c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^"},test_match:function(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0)}}lines=match[0].match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno+=lines.length}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng]}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false}if(token){return token}else if(this._backtrack){for(var k in backup){this[k]=backup[k]}return false}return false},next:function(){if(this.done){return this.EOF}if(!this._input){this.done=true}var token,match,tempMatch,index;if(!this._more){this.yytext="";this.match=""}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token}else if(this._backtrack){match=false;continue}else{return false}}else if(!this.options.flex){break}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token}return false}if(this._input===""){return this.EOF}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}},lex:function lex(){var r=this.next();if(r){return r}else{return this.lex()}},begin:function begin(condition){this.conditionStack.push(condition)},popState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop()}else{return this.conditionStack[0]}},_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules}else{return this.conditions["INITIAL"].rules}},topState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n]}else{return"INITIAL"}},pushState:function pushState(condition){this.begin(condition)},stateStackSize:function stateStackSize(){return this.conditionStack.length},options:{"case-insensitive":true},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:return 18;break;case 1:return 25;break;case 2:return 26;break;case 3:break;case 4:break;case 5:return"ABORT";break;case 6:return"ADD";break;case 7:return"AFTER";break;case 8:return 82;break;case 9:return"ALTER";break;case 10:return"ANALYZE";break;case 11:return 65;break;case 12:return 86;break;case 13:return"ASC";break;case 14:return"ATTACH";break;case 15:return"BEFORE";break;case 16:return"BEGIN";break;case 17:return 105;break;case 18:return"BY";break;case 19:return"CASCADE";break;case 20:return"CASE";break;case 21:return"CAST";break;case 22:return"CHECK";break;case 23:return"COLLATE";break;case 24:return"COLUMN";break;case 25:return"CONFLICT";break;case 26:return 78;break;case 27:return"CONSTRAINT";break;case 28:return"CREATE";break;case 29:return"CROSS";break;case 30:return"CURRENT DATE";break;case 31:return"CURRENT TIME";break;case 32:return"CURRENT TIMESTAMP";break;case 33:return"DATABASE";break;case 34:return"DEFAULT";break;case 35:return"DEFERRABLE";break;case 36:return"DEFERRED";break;case 37:return 69;break;case 38:return 76;break;case 39:return"DETACH";break;case 40:return 81;break;case 41:return 111;break;case 42:return 113;break;case 43:return"EACH";break;case 44:return"ELSE";break;case 45:return"END";break;case 46:return"ESCAPE";break;case 47:return"EXCEPT";break;case 48:return"EXCLUSIVE";break;case 49:return"EXISTS";break;case 50:return"EXPLAIN";break;case 51:return"FAIL";break;case 52:return"FOR";break;case 53:return"FOREIGN";break;case 54:return 70;break;case 55:return"FULL";break;case 56:return"GLOB";break;case 57:return"GROUP";break;case 58:return 96;break;case 59:return"IF";break;case 60:return"IGNORE";break;case 61:return"IMMEDIATE";break;case 62:return"IN";break;case 63:return 91;break;case 64:return 92;break;case 65:return"INDEXED";break;case 66:return"INITIALLY";break;case 67:return"INNER";break;case 68:return 52;break;case 69:return"INSTEAD";break;case 70:return"INTERSECT";break;case 71:return 53;break;case 72:return"IS";break;case 73:return"ISNULL";break;case 74:return"JOIN";break;case 75:return"KEY";break;case 76:return"LEFT";break;case 77:return 107;break;case 78:return 108;break;case 79:return 74;break;case 80:return"MATCH";break;case 81:return"NATURAL";break;case 82:return"NO";break;case 83:return"NOT";break;case 84:return"NOTNULL";break;case 85:return 37;break;case 86:return 39;break;case 87:return"OF";break;case 88:return"OFFSET";break;case 89:return"ON";break;case 90:return 100;break;case 91:return"ORDER";break;case 92:return"OUTER";break;case 93:return"PLAN";break;case 94:return"PRAGMA";break;case 95:return"PRIMARY";break;case 96:return"QUERY";break;case 97:return"RAISE";break;case 98:return"RECURSIVE";break;case 99:return"REFERENCES";break;case 100:return"REGEXP";break;case 101:return"REINDEX";break;case 102:return"RELEASE";break;case 103:return"RENAME";break;case 104:return 66;break;case 105:return"RESTRICT";break;case 106:return"RIGHT";break;case 107:return"ROLLBACK";break;case 108:return"ROW";break;case 109:return 98;break;case 110:return 54;break;case 111:return 112;break;case 112:return"TEMP";break;case 113:return"THEN";break;case 114:return"TO";break;case 115:return"TRIGGER";break;case 116:return"UNION";break;case 117:return"UNIQUE";break;case 118:return 58;break;case 119:return"USING";break;case 120:return"VACUUM";break;case 121:return"VALUES";break;case 122:return"VIEW";break;case 123:return"WHEN";break;case 124:return 60;break;case 125:return"WITH";break;case 126:return 30;break;case 127:return 31;break;case 128:return 109;break;case 129:return 110;break;case 130:return 23;break;case 131:return 23;break;case 132:return"TILDEs";break;case 133:return 63;break;case 134:return"PLUS";break;case 135:return"MINUS";break;case 136:return 85;break;case 137:return"SLASH";break;case 138:return"REM";break;case 139:return"RSHIFT";break;case 140:return"LSHIFT";break;case 141:return"NE";break;case 142:return"NE";break;case 143:return 102;break;case 144:return 101;break;case 145:return 104;break;case 146:return 103;break;case 147:return 57;break;case 148:return"BITAND";break;case 149:return"BITOR";break;case 150:return"LPAR";break;case 151:return"RPAR";break;case 152:return 47;break;case 153:return 49;break;case 154:return 41;break;case 155:return 43;break;case 156:return 20;break;case 157:return 44;break;case 158:return 51;break;case 159:return 6;break;case 160:return"DOLLAR";break;case 161:return"QUESTION";break;case 162:return"CARET";break;case 163:return 17;break;case 164:return 5;break;case 165:return"INVALID";break}},rules:[/^(?:([`](\\.|[^"]|\\")*?[`])+)/i,/^(?:(['](\\.|[^']|\\')*?['])+)/i,/^(?:(["](\\.|[^"]|\\")*?["])+)/i,/^(?:--(.*?)($|\r\n|\r|\n))/i,/^(?:\s+)/i,/^(?:ABORT\b)/i,/^(?:ADD\b)/i,/^(?:AFTER\b)/i,/^(?:ALL\b)/i,/^(?:ALTER\b)/i,/^(?:ANALYZE\b)/i,/^(?:AND\b)/i,/^(?:AS\b)/i,/^(?:ASC\b)/i,/^(?:ATTACH\b)/i,/^(?:BEFORE\b)/i,/^(?:BEGIN\b)/i,/^(?:BETWEEN\b)/i,/^(?:BY\b)/i,/^(?:CASCADE\b)/i,/^(?:CASE\b)/i,/^(?:CAST\b)/i,/^(?:CHECK\b)/i,/^(?:COLLATE\b)/i,/^(?:COLUMN\b)/i,/^(?:CONFLICT\b)/i,/^(?:CONSISTENT_READ\b)/i,/^(?:CONSTRAINT\b)/i,/^(?:CREATE\b)/i,/^(?:CROSS\b)/i,/^(?:CURRENT_DATE\b)/i,/^(?:CURRENT_TIME\b)/i,/^(?:CURRENT_TIMESTAMP\b)/i,/^(?:DATABASE\b)/i,/^(?:DEFAULT\b)/i,/^(?:DEFERRABLE\b)/i,/^(?:DEFERRED\b)/i,/^(?:DELETE\b)/i,/^(?:DESC\b)/i,/^(?:DETACH\b)/i,/^(?:DISTINCT\b)/i,/^(?:DROP\b)/i,/^(?:DESCRIBE\b)/i,/^(?:EACH\b)/i,/^(?:ELSE\b)/i,/^(?:END\b)/i,/^(?:ESCAPE\b)/i,/^(?:EXCEPT\b)/i,/^(?:EXCLUSIVE\b)/i,/^(?:EXISTS\b)/i,/^(?:EXPLAIN\b)/i,/^(?:FAIL\b)/i,/^(?:FOR\b)/i,/^(?:FOREIGN\b)/i,/^(?:FROM\b)/i,/^(?:FULL\b)/i,/^(?:GLOB\b)/i,/^(?:GROUP\b)/i,/^(?:HAVING\b)/i,/^(?:IF\b)/i,/^(?:IGNORE\b)/i,/^(?:IMMEDIATE\b)/i,/^(?:IN\b)/i,/^(?:USE\b)/i,/^(?:INDEX\b)/i,/^(?:INDEXED\b)/i,/^(?:INITIALLY\b)/i,/^(?:INNER\b)/i,/^(?:INSERT\b)/i,/^(?:INSTEAD\b)/i,/^(?:INTERSECT\b)/i,/^(?:INTO\b)/i,/^(?:IS\b)/i,/^(?:ISNULL\b)/i,/^(?:JOIN\b)/i,/^(?:KEY\b)/i,/^(?:LEFT\b)/i,/^(?:LIKE\b)/i,/^(?:CONTAINS\b)/i,/^(?:LIMIT\b)/i,/^(?:MATCH\b)/i,/^(?:NATURAL\b)/i,/^(?:NO\b)/i,/^(?:NOT\b)/i,/^(?:NOTNULL\b)/i,/^(?:NULL\b)/i,/^(?:UNDEFINED\b)/i,/^(?:OF\b)/i,/^(?:OFFSET\b)/i,/^(?:ON\b)/i,/^(?:OR\b)/i,/^(?:ORDER\b)/i,/^(?:OUTER\b)/i,/^(?:PLAN\b)/i,/^(?:PRAGMA\b)/i,/^(?:PRIMARY\b)/i,/^(?:QUERY\b)/i,/^(?:RAISE\b)/i,/^(?:RECURSIVE\b)/i,/^(?:REFERENCES\b)/i,/^(?:REGEXP\b)/i,/^(?:REINDEX\b)/i,/^(?:RELEASE\b)/i,/^(?:RENAME\b)/i,/^(?:REPLACE\b)/i,/^(?:RESTRICT\b)/i,/^(?:RIGHT\b)/i,/^(?:ROLLBACK\b)/i,/^(?:ROW\b)/i,/^(?:SELECT\b)/i,/^(?:SET\b)/i,/^(?:TABLE\b)/i,/^(?:TEMP\b)/i,/^(?:THEN\b)/i,/^(?:TO\b)/i,/^(?:TRIGGER\b)/i,/^(?:UNION\b)/i,/^(?:UNIQUE\b)/i,/^(?:UPDATE\b)/i,/^(?:USING\b)/i,/^(?:VACUUM\b)/i,/^(?:VALUES\b)/i,/^(?:VIEW\b)/i,/^(?:WHEN\b)/i,/^(?:WHERE\b)/i,/^(?:WITH\b)/i,/^(?:TRUE\b)/i,/^(?:FALSE\b)/i,/^(?:SHOW\b)/i,/^(?:TABLES\b)/i,/^(?:[-]?(\d*[.])?\d+[eE]\d+)/i,/^(?:[-]?(\d*[.])?\d+)/i,/^(?:~)/i,/^(?:\+=)/i,/^(?:\+)/i,/^(?:-)/i,/^(?:\*)/i,/^(?:\/)/i,/^(?:%)/i,/^(?:>>)/i,/^(?:<<)/i,/^(?:<>)/i,/^(?:!=)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:<)/i,/^(?:=)/i,/^(?:&)/i,/^(?:\|)/i,/^(?:\()/i,/^(?:\))/i,/^(?:\{)/i,/^(?:\})/i,/^(?:\[)/i,/^(?:\])/i,/^(?:\.)/i,/^(?:,)/i,/^(?::)/i,/^(?:;)/i,/^(?:\$)/i,/^(?:\?)/i,/^(?:\^)/i,/^(?:[a-zA-Z_][a-zA-Z_0-9]*)/i,/^(?:$)/i,/^(?:.)/i],
conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],inclusive:true}}};return lexer}();parser.lexer=lexer;function Parser(){this.yy={}}Parser.prototype=parser;parser.Parser=Parser;return new Parser}();if(typeof require!=="undefined"&&typeof exports!=="undefined"){exports.parser=parserV2;exports.Parser=parserV2.Parser;exports.parse=function(){return parserV2.parse.apply(parserV2,arguments)};exports.main=function commonjsMain(args){if(!args[1]){console.log("Usage: "+args[0]+" FILE");process.exit(1)}var source=require("fs").readFileSync(require("path").normalize(args[1]),"utf8");return exports.parser.parse(source)};if(typeof module!=="undefined"&&require.main===module){exports.main(process.argv.slice(1))}}