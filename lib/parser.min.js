var parserV2=function(){var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,16],$V1=[1,17],$V2=[1,18],$V3=[1,19],$V4=[1,25],$V5=[1,20],$V6=[1,21],$V7=[1,22],$V8=[1,23],$V9=[1,26],$Va=[5,6],$Vb=[5,6,79,83],$Vc=[1,34],$Vd=[1,35],$Ve=[5,6,83],$Vf=[20,21,90],$Vg=[1,50],$Vh=[5,6,23,28,49,56,59,62,65,68,70,75,79,81,83,91,96,101,105,106,107,108,109,110,112,113,116,120,123,125,134,139],$Vi=[1,67],$Vj=[1,70],$Vk=[49,75],$Vl=[5,6,65,79,81,83,96,101],$Vm=[5,6,49,65,75,79,81,83,96,101],$Vn=[49,65],$Vo=[5,6,65,79,81,83,101],$Vp=[5,6,79,83,101],$Vq=[5,6,49],$Vr=[1,135],$Vs=[1,133],$Vt=[1,134],$Vu=[1,136],$Vv=[1,137],$Vw=[1,138],$Vx=[1,140],$Vy=[1,139],$Vz=[5,6,79,81,83,101],$VA=[5,6,48,49,54,65,70],$VB=[5,6,48,49,54,65],$VC=[49,54],$VD=[2,52],$VE=[1,169],$VF=[1,170],$VG=[48,49],$VH=[2,42],$VI=[5,6,79,81,83],$VJ=[1,200],$VK=[1,201],$VL=[1,202],$VM=[1,196],$VN=[1,211],$VO=[1,212],$VP=[1,209],$VQ=[5,6,70],$VR=[1,230],$VS=[1,234],$VT=[1,232],$VU=[1,235],$VV=[1,236],$VW=[1,237],$VX=[1,238],$VY=[1,239],$VZ=[1,240],$V_=[5,6,62,70,79,81,83,101,105,106,107,108,109,110,112],$V$=[5,6,62,70,79,81,83,101,105,106,107,108,109,110,112,113],$V01=[1,243],$V11=[1,241],$V21=[1,244],$V31=[1,245],$V41=[1,246],$V51=[1,247],$V61=[1,248],$V71=[1,249],$V81=[1,250],$V91=[5,6,62,70,79,83,105,106,107,108,109,110,112,113],$Va1=[5,6,62,70,79,81,83,105,106,107,108,109,110,112,113],$Vb1=[1,274],$Vc1=[1,278],$Vd1=[1,276],$Ve1=[1,279],$Vf1=[1,280],$Vg1=[1,281],$Vh1=[1,282],$Vi1=[1,283],$Vj1=[1,284],$Vk1=[1,285],$Vl1=[49,120],$Vm1=[2,176],$Vn1=[1,336],$Vo1=[2,178],$Vp1=[1,349],$Vq1=[49,120,129];var parser={trace:function trace(){},yy:{},symbols_:{error:2,main:3,sql_stmt_list:4,EOF:5,SEMICOLON:6,sql_stmt:7,select_stmt:8,insert_stmt:9,update_stmt:10,replace_stmt:11,delete_stmt:12,create_table_stmt:13,show_tables_stmt:14,drop_table_stmt:15,describe_table_stmt:16,drop_index_stmt:17,scan_stmt:18,name:19,LITERAL:20,BRALITERAL:21,database_table_name:22,DOT:23,dynamodb_table_name:24,database_index_name:25,dynamodb_index_name:26,signed_number:27,NUMBER:28,string_literal:29,SINGLE_QUOTED_STRING:30,DOUBLE_QUOTED_STRING:31,XSTRING:32,literal_value:33,"boolean":34,TRUE:35,FALSE:36,boolean_value:37,dynamodb_data_string:38,dynamodb_data_number:39,dynamodb_data_boolean:40,dynamodb_data_null:41,NULL:42,dynamodb_data_undefined:43,UNDEFINED:44,dynamodb_data_array:45,ARRAYLPAR:46,array_list:47,ARRAYRPAR:48,COMMA:49,array_value:50,dynamodb_data_json:51,JSONLPAR:52,dynamodb_data_json_list:53,JSONRPAR:54,dynamodb_data_json_kv:55,COLON:56,INSERT:57,INTO:58,SET:59,def_insert_columns:60,def_insert_onecolumn:61,EQ:62,UPDATE:63,def_update_columns:64,WHERE:65,def_update_where:66,def_update_onecolumn:67,PLUSEQ:68,def_update_where_cond:69,AND:70,REPLACE:71,def_replace_columns:72,def_replace_onecolumn:73,DELETE:74,FROM:75,def_delete_where:76,def_delete_where_cond:77,limit_clause:78,LIMIT:79,sort_clause:80,DESC:81,def_consistent_read:82,CONSISTENT_READ:83,def_select:84,distinct_all:85,DISTINCT:86,ALL:87,def_select_columns:88,def_select_onecolumn:89,STAR:90,AS:91,join_clause:92,table_or_subquery:93,from:94,use_index:95,USE:96,INDEX:97,def_where:98,where_expr:99,def_having:100,HAVING:101,having_expr:102,SELECT:103,bind_parameter:104,OR:105,GT:106,GE:107,LT:108,LE:109,BETWEEN:110,where_between:111,LIKE:112,CONTAINS:113,CREATE:114,TABLE:115,LPAR:116,def_ct_typedef_list:117,def_ct_pk:118,def_ct_indexes:119,RPAR:120,def_ct_index_list:121,def_ct_index:122,LSI:123,def_ct_projection:124,GSI:125,def_ct_throughput:126,PRIMARY:127,KEY:128,THROUGHPUT:129,PROJECTION:130,KEYS_ONLY:131,def_ct_projection_list:132,def_ct_typedef:133,STRING:134,SHOW:135,TABLES:136,DROP:137,DESCRIBE:138,ON:139,def_scan:140,def_scan_limit_clause:141,def_scan_consistent_read:142,SCAN:143,def_scan_columns:144,def_scan_use_index:145,def_scan_having:146,def_scan_onecolumn:147,def_scan_from:148,def_scan_having_expr:149,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",6:"SEMICOLON",20:"LITERAL",21:"BRALITERAL",23:"DOT",28:"NUMBER",30:"SINGLE_QUOTED_STRING",31:"DOUBLE_QUOTED_STRING",32:"XSTRING",35:"TRUE",36:"FALSE",42:"NULL",44:"UNDEFINED",46:"ARRAYLPAR",48:"ARRAYRPAR",49:"COMMA",52:"JSONLPAR",54:"JSONRPAR",56:"COLON",57:"INSERT",58:"INTO",59:"SET",62:"EQ",63:"UPDATE",65:"WHERE",68:"PLUSEQ",70:"AND",71:"REPLACE",74:"DELETE",75:"FROM",79:"LIMIT",81:"DESC",83:"CONSISTENT_READ",86:"DISTINCT",87:"ALL",90:"STAR",91:"AS",96:"USE",97:"INDEX",101:"HAVING",103:"SELECT",104:"bind_parameter",105:"OR",106:"GT",107:"GE",108:"LT",109:"LE",110:"BETWEEN",112:"LIKE",113:"CONTAINS",114:"CREATE",115:"TABLE",116:"LPAR",120:"RPAR",123:"LSI",125:"GSI",127:"PRIMARY",128:"KEY",129:"THROUGHPUT",130:"PROJECTION",131:"KEYS_ONLY",134:"STRING",135:"SHOW",136:"TABLES",137:"DROP",138:"DESCRIBE",139:"ON",143:"SCAN"},productions_:[0,[3,2],[4,3],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[19,1],[19,1],[22,3],[22,1],[24,1],[25,1],[26,1],[27,1],[29,1],[29,1],[29,1],[33,1],[33,1],[34,1],[34,1],[37,1],[37,1],[38,1],[38,1],[39,1],[40,1],[40,1],[41,1],[43,1],[45,3],[47,3],[47,1],[50,0],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[51,3],[53,3],[53,1],[55,0],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[9,5],[60,3],[60,1],[61,3],[61,3],[61,3],[61,3],[61,3],[61,3],[10,6],[64,3],[64,1],[67,3],[67,3],[67,3],[67,3],[67,3],[67,3],[67,3],[67,3],[66,1],[66,3],[69,3],[69,3],[11,5],[72,3],[72,1],[73,3],[73,3],[73,3],[73,3],[73,3],[73,3],[12,5],[76,1],[76,3],[77,3],[77,3],[78,0],[78,2],[80,0],[80,1],[82,0],[82,1],[8,4],[85,0],[85,1],[85,1],[88,3],[88,1],[89,1],[89,1],[89,3],[92,1],[93,1],[94,0],[94,2],[95,0],[95,3],[98,2],[98,0],[100,2],[100,0],[84,7],[99,1],[99,1],[99,1],[99,3],[99,3],[99,3],[99,3],[99,3],[99,3],[99,3],[99,3],[99,3],[111,3],[111,3],[102,1],[102,1],[102,1],[102,1],[102,3],[102,3],[102,3],[102,3],[102,3],[102,3],[102,3],[102,3],[102,3],[102,3],[102,3],[102,3],[13,9],[119,0],[119,2],[121,3],[121,1],[122,7],[122,8],[122,9],[122,10],[118,6],[118,8],[126,0],[126,3],[124,0],[124,2],[124,2],[124,4],[132,3],[132,1],[117,3],[117,1],[133,2],[133,2],[14,2],[15,3],[16,3],[17,5],[18,3],[140,6],[141,0],[141,2],[142,0],[142,1],[144,3],[144,1],[147,1],[147,1],[147,3],[148,0],[148,2],[145,0],[145,3],[146,2],[146,0],[149,1],[149,1],[149,1],[149,1],[149,3],[149,3],[149,3],[149,3],[149,3],[149,3],[149,3],[149,3],[149,3],[149,3],[149,3],[149,3]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:this.$=$$[$0-1];return this.$;break;case 2:this.$=$$[$0-2];if($$[$0])this.$.push($$[$0]);break;case 3:case 41:case 51:case 73:case 82:case 97:case 120:case 124:case 183:case 199:this.$=[$$[$0]];break;case 15:case 19:case 21:case 22:case 23:case 24:case 25:case 125:case 129:case 135:case 149:case 150:case 206:case 209:case 210:this.$=$$[$0];break;case 16:this.$=$$[$0].substr(1,$$[$0].length-2);break;case 17:this.$={database:$$[$0-2],table:$$[$0]};break;case 18:this.$={table:$$[$0]};break;case 20:this.$={index:$$[$0]};break;case 26:this.$={type:"number",number:$$[$0]};break;case 27:this.$={type:"string",string:$$[$0]};break;case 28:case 35:this.$=true;break;case 29:case 36:this.$=false;break;case 30:this.$={type:"boolean",value:true};break;case 31:this.$={type:"boolean",value:false};break;case 32:case 33:case 34:this.$=eval($$[$0]);break;case 37:this.$=null;break;case 38:this.$="\x00";break;case 39:if($$[$0-1].slice(-1)=="\x00"){this.$=$$[$0-1].slice(0,-1)}else this.$=$$[$0-1];break;case 40:this.$=$$[$0-2];this.$.push($$[$0]);break;case 42:this.$="\x00";break;case 43:case 44:case 45:case 46:case 47:case 48:case 204:this.$=$$[$0];break;case 49:var $kv={};if($$[$0-1]){$$[$0-1].map(function(v){if(v)$kv[v[0]]=v[1]})}this.$=$kv;break;case 50:case 72:case 81:case 96:case 119:case 168:case 182:case 198:this.$=$$[$0-2];this.$.push($$[$0]);break;case 52:case 109:case 111:case 113:case 116:case 126:case 128:case 166:case 194:case 196:case 203:case 205:this.$=undefined;break;case 53:case 54:case 55:case 56:case 57:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 68:case 69:case 70:this.$=[$$[$0-2],$$[$0]];break;case 71:var $kv={};$$[$0].map(function(v){$kv[v[0]]=v[1]});this.$={statement:"INSERT",dynamodb:{TableName:$$[$0-2],set:$kv}};break;case 74:case 75:case 76:case 77:case 78:case 79:case 83:case 84:case 85:case 86:case 87:case 88:case 98:case 99:case 100:case 101:case 102:case 103:this.$=[$$[$0-2],$$[$0]];break;case 80:var $kv=[];$$[$0-2].map(function(v){$kv.push({k:v[0],v:v[1],op:v[2]})});this.$={statement:"UPDATE",dynamodb:{TableName:$$[$0-4],set:$kv,where:$$[$0]}};break;case 89:this.$=[$$[$0-2],$$[$0],"+="];break;case 90:this.$=[$$[$0-2],undefined,"delete"];break;case 91:case 105:case 169:case 185:this.$=[$$[$0]];break;case 92:case 106:this.$=[$$[$0-2],$$[$0]];break;case 93:case 94:case 107:case 108:this.$={k:$$[$0-2],v:$$[$0]};break;case 95:var $kv={};$$[$0].map(function(v){$kv[v[0]]=v[1]});this.$={statement:"REPLACE",dynamodb:{TableName:$$[$0-2],set:$kv}};break;case 104:this.$={statement:"DELETE",dynamodb:{TableName:$$[$0-2],set:$kv,where:$$[$0]}};break;case 110:case 195:this.$={limit:$$[$0]};break;case 112:this.$={sort:"DESC"};break;case 114:case 197:this.$={consistent_read:true};break;case 115:this.$={statement:"SELECT",dynamodb:$$[$0-3]};yy.extend(this.$.dynamodb,$$[$0-2]);yy.extend(this.$.dynamodb,$$[$0-1]);yy.extend(this.$.dynamodb,$$[$0]);break;case 117:this.$={distinct:true};break;case 118:this.$={all:true};break;case 121:case 200:this.$={type:"star",star:true};break;case 122:case 201:this.$={type:"column",column:$$[$0]};break;case 123:case 202:this.$={type:"column",column:$$[$0-2],alias:$$[$0]};break;case 127:this.$={from:$$[$0]};break;case 130:this.$={where:$$[$0]};break;case 132:case 207:this.$={having:$$[$0]};break;case 134:this.$={columns:$$[$0-4]};yy.extend(this.$,$$[$0-5]);yy.extend(this.$,$$[$0-3]);yy.extend(this.$,$$[$0-2]);yy.extend(this.$,$$[$0-1]);yy.extend(this.$,$$[$0]);break;case 136:case 151:case 211:this.$={bind_parameter:$$[$0]};break;case 137:case 152:case 212:this.$={column:$$[$0]};break;case 138:case 153:case 213:this.$={op:"AND",left:$$[$0-2],right:$$[$0]};break;case 139:case 154:case 214:this.$={op:"OR",left:$$[$0-2],right:$$[$0]};break;case 140:case 155:case 215:this.$={op:"=",left:$$[$0-2],right:$$[$0]};break;case 141:case 156:case 216:this.$={op:">",left:$$[$0-2],right:$$[$0]};break;case 142:case 157:case 217:this.$={op:">=",left:$$[$0-2],right:$$[$0]};break;case 143:case 158:case 218:this.$={op:"<",left:$$[$0-2],right:$$[$0]};break;case 144:case 159:case 219:this.$={op:"<=",left:$$[$0-2],right:$$[$0]};break;case 145:case 160:case 220:this.$={op:"BETWEEN",left:$$[$0-2],right:$$[$0]};break;case 146:case 161:case 221:this.$={op:"LIKE",left:$$[$0-2],right:{type:"string",string:$$[$0]}};break;case 147:this.$={left:{type:"number",number:$$[$0-2]},right:{type:"number",number:$$[$0]}};break;case 148:this.$={left:{type:"string",string:$$[$0-2]},right:{type:"string",string:$$[$0]}};break;case 162:case 222:this.$={op:"CONTAINS",left:$$[$0-2],right:{type:"string",string:$$[$0]}};break;case 163:case 223:this.$={op:"CONTAINS",left:$$[$0-2],right:{type:"number",number:$$[$0]}};break;case 164:case 224:this.$={op:"CONTAINS",left:$$[$0-2],right:{type:"boolean",value:$$[$0]}};break;case 165:this.$={statement:"CREATE_TABLE",dynamodb:{TableName:$$[$0-6],AttributeDefinitions:$$[$0-4]}};yy.extend(this.$.dynamodb,$$[$0-2]);yy.extend(this.$.dynamodb,$$[$0-1]);break;case 167:var indexes={LocalSecondaryIndexes:[],GlobalSecondaryIndexes:[]};$$[$0].map(function(idx){if(idx.hasOwnProperty("LSI"))indexes.LocalSecondaryIndexes.push(idx.LSI);if(idx.hasOwnProperty("GSI"))indexes.GlobalSecondaryIndexes.push(idx.GSI)});this.$=indexes;break;case 170:this.$={};this.$[$$[$0-4]]={IndexName:$$[$0-5],KeySchema:[{AttributeName:$$[$0-2],KeyType:"HASH"}],Projection:$$[$0]};break;case 171:this.$={};this.$[$$[$0-5]]={IndexName:$$[$0-6],KeySchema:[{AttributeName:$$[$0-3],KeyType:"HASH"}],Projection:$$[$0-1],ProvisionedThroughput:$$[$0]};break;case 172:this.$={};this.$[$$[$0-6]]={IndexName:$$[$0-7],KeySchema:[{AttributeName:$$[$0-4],KeyType:"HASH"},{AttributeName:$$[$0-2],KeyType:"RANGE"}],Projection:$$[$0]};break;case 173:this.$={};this.$[$$[$0-7]]={IndexName:$$[$0-8],KeySchema:[{AttributeName:$$[$0-5],KeyType:"HASH"},{AttributeName:$$[$0-3],KeyType:"RANGE"}],Projection:$$[$0-1],ProvisionedThroughput:$$[$0]};break;case 174:this.$={KeySchema:[{AttributeName:$$[$0-2],KeyType:"HASH"}],ProvisionedThroughput:$$[$0]};break;case 175:this.$={KeySchema:[{AttributeName:$$[$0-4],KeyType:"HASH"},{AttributeName:$$[$0-2],KeyType:"RANGE"}],ProvisionedThroughput:$$[$0]};break;case 176:this.$={ReadCapacityUnits:1,WriteCapacityUnits:1};break;case 177:this.$={ReadCapacityUnits:eval($$[$0-1]),WriteCapacityUnits:eval($$[$0])};break;case 178:case 179:this.$={ProjectionType:"ALL"};break;case 180:this.$={ProjectionType:"KEYS_ONLY"};break;case 181:this.$={ProjectionType:"INCLUDE",NonKeyAttributes:$$[$0-1]};break;case 184:this.$=$$[$0-2];this.$.push($$[$0]);break;case 186:this.$={AttributeName:$$[$0-1],AttributeType:"S"};break;case 187:this.$={AttributeName:$$[$0-1],AttributeType:"N"};break;case 188:this.$={statement:"SHOW_TABLES"};break;case 189:this.$={statement:"DROP_TABLE",dynamodb:{TableName:$$[$0]}};break;case 190:this.$={statement:"DESCRIBE_TABLE",dynamodb:{TableName:$$[$0]}};break;case 191:this.$={statement:"DROP_INDEX",dynamodb:{TableName:$$[$0],GlobalSecondaryIndexUpdates:[{Delete:{IndexName:$$[$0-2]}}]}};break;case 192:this.$={statement:"SCAN",dynamodb:{}};yy.extend(this.$.dynamodb,$$[$0-2]);yy.extend(this.$.dynamodb,$$[$0-1]);yy.extend(this.$.dynamodb,$$[$0]);break;case 193:this.$={TableName:$$[$0-2],columns:$$[$0-4]};yy.extend(this.$,$$[$0-1]);yy.extend(this.$,$$[$0]);break}},table:[{3:1,4:2,7:3,8:4,9:5,10:6,11:7,12:8,13:9,14:10,15:11,16:12,17:13,18:14,57:$V0,63:$V1,71:$V2,74:$V3,84:15,103:$V4,114:$V5,135:$V6,137:$V7,138:$V8,140:24,143:$V9},{1:[3]},{5:[1,27],6:[1,28]},o($Va,[2,3]),o($Va,[2,4]),o($Va,[2,5]),o($Va,[2,6]),o($Va,[2,7]),o($Va,[2,8]),o($Va,[2,9]),o($Va,[2,10]),o($Va,[2,11]),o($Va,[2,12]),o($Va,[2,13]),o($Va,[2,14]),o($Vb,[2,111],{80:29,81:[1,30]}),{58:[1,31]},{19:33,20:$Vc,21:$Vd,24:32},{58:[1,36]},{75:[1,37]},{115:[1,38]},{136:[1,39]},{97:[1,41],115:[1,40]},{115:[1,42]},o($Ve,[2,194],{141:43,79:[1,44]}),o($Vf,[2,116],{85:45,86:[1,46],87:[1,47]}),{19:51,20:$Vc,21:$Vd,90:$Vg,144:48,147:49},{1:[2,1]},{7:52,8:4,9:5,10:6,11:7,12:8,13:9,14:10,15:11,16:12,17:13,18:14,57:$V0,63:$V1,71:$V2,74:$V3,84:15,103:$V4,114:$V5,135:$V6,137:$V7,138:$V8,140:24,143:$V9},o($Ve,[2,109],{78:53,79:[1,54]}),o($Vb,[2,112]),{19:33,20:$Vc,21:$Vd,24:55},{59:[1,56]},o([5,6,59,65,79,83,96,101,116],[2,19]),o($Vh,[2,15]),o($Vh,[2,16]),{19:33,20:$Vc,21:$Vd,24:57},{19:33,20:$Vc,21:$Vd,24:58},{19:33,20:$Vc,21:$Vd,24:59},o($Va,[2,188]),{19:33,20:$Vc,21:$Vd,24:60},{19:62,20:$Vc,21:$Vd,26:61},{19:33,20:$Vc,21:$Vd,24:63},o($Va,[2,196],{142:64,83:[1,65]}),{27:66,28:$Vi},{19:71,20:$Vc,21:$Vd,88:68,89:69,90:$Vj},o($Vf,[2,117]),o($Vf,[2,118]),{49:[1,73],75:[1,72]},o($Vk,[2,199]),o($Vk,[2,200]),o($Vk,[2,201],{91:[1,74]}),o($Va,[2,2]),o($Va,[2,113],{82:75,83:[1,76]}),{27:77,28:$Vi},{59:[1,78]},{19:81,20:$Vc,21:$Vd,64:79,67:80},{59:[1,82]},{65:[1,83]},{116:[1,84]},o($Va,[2,189]),{139:[1,85]},{139:[2,21]},o($Va,[2,190]),o($Va,[2,192]),o($Va,[2,197]),o($Ve,[2,195]),o([5,6,28,49,62,70,79,81,83,101,105,106,107,108,109,110,112,113,120],[2,22]),o($Vl,[2,126],{94:86,49:[1,87],75:[1,88]}),o($Vm,[2,120]),o($Vm,[2,121]),o($Vm,[2,122],{91:[1,89]}),{19:33,20:$Vc,21:$Vd,24:90},{19:51,20:$Vc,21:$Vd,90:$Vg,147:91},{19:92,20:$Vc,21:$Vd},o($Va,[2,115]),o($Va,[2,114]),o($Ve,[2,110]),{19:95,20:$Vc,21:$Vd,60:93,61:94},{49:[1,97],65:[1,96]},o($Vn,[2,82]),{62:[1,98],68:[1,99]},{19:102,20:$Vc,21:$Vd,72:100,73:101},{19:105,20:$Vc,21:$Vd,76:103,77:104},{19:108,20:$Vc,21:$Vd,117:106,133:107},{19:33,20:$Vc,21:$Vd,24:109},o($Vo,[2,128],{95:110,96:[1,111]}),{19:71,20:$Vc,21:$Vd,89:112,90:$Vj},{19:116,20:$Vc,21:$Vd,22:115,92:113,93:114},{19:117,20:$Vc,21:$Vd},o($Vp,[2,205],{145:118,96:[1,119]}),o($Vk,[2,198]),o($Vk,[2,202]),o($Va,[2,71],{49:[1,120]}),o($Vq,[2,73]),{62:[1,121]},{19:124,20:$Vc,21:$Vd,66:122,69:123},{19:81,20:$Vc,21:$Vd,67:125},{28:$Vr,30:$Vs,31:$Vt,35:$Vu,36:$Vv,38:126,39:127,40:128,41:129,42:$Vw,43:132,44:[1,141],45:131,46:$Vx,51:130,52:$Vy},{28:$Vr,39:142},o($Va,[2,95],{49:[1,143]}),o($Vq,[2,97]),{62:[1,144]},o($Va,[2,104]),o($Va,[2,105],{70:[1,145]}),{62:[1,146]},{49:[1,147]},{49:[2,185]},{28:[1,149],134:[1,148]},o($Va,[2,191]),o($Vz,[2,131],{98:150,65:[1,151]}),{97:[1,152]},o($Vm,[2,119]),o($Vl,[2,127]),o($Vl,[2,124]),o($Vl,[2,125]),o($Vl,[2,18],{23:[1,153]}),o($Vm,[2,123]),o($Vb,[2,208],{146:154,101:[1,155]}),{97:[1,156]},{19:95,20:$Vc,21:$Vd,61:157},{28:$Vr,30:$Vs,31:$Vt,35:$Vu,36:$Vv,38:158,39:159,40:160,41:161,42:$Vw,45:163,46:$Vx,51:162,52:$Vy},o($Va,[2,80]),o($Va,[2,91],{70:[1,164]}),{62:[1,165]},o($Vn,[2,81]),o($Vn,[2,83]),o($Vn,[2,84]),o($Vn,[2,85]),o($Vn,[2,86]),o($Vn,[2,87]),o($Vn,[2,88]),o($Vn,[2,90]),o($VA,[2,32]),o($VA,[2,33]),o($VA,[2,34]),o($VB,[2,35]),o($VB,[2,36]),o($VB,[2,37]),o($VC,$VD,{53:166,55:167,19:168,20:$Vc,21:$Vd,30:$VE,31:$VF}),o($VG,$VH,{47:171,50:172,39:173,38:174,40:175,41:176,45:177,51:178,28:$Vr,30:$Vs,31:$Vt,35:$Vu,36:$Vv,42:$Vw,46:$Vx,52:$Vy}),o($Vn,[2,38]),o($Vn,[2,89]),{19:102,20:$Vc,21:$Vd,73:179},{28:$Vr,30:$Vs,31:$Vt,35:$Vu,36:$Vv,38:180,39:181,40:182,41:183,42:$Vw,45:185,46:$Vx,51:184,52:$Vy},{19:105,20:$Vc,21:$Vd,77:186},{28:$Vr,30:$Vs,31:$Vt,38:187,39:188},{19:108,20:$Vc,21:$Vd,118:189,127:[1,191],133:190},{49:[2,186]},{49:[2,187]},o($VI,[2,133],{100:192,101:[1,193]}),{19:197,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:195,99:194,104:$VM},{19:204,20:$Vc,21:$Vd,25:203},{19:205,20:$Vc,21:$Vd},o($Vb,[2,193]),{19:210,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:207,35:$VN,36:$VO,37:208,104:$VP,149:206},{19:204,20:$Vc,21:$Vd,25:213},o($Vq,[2,72]),o($Vq,[2,74]),o($Vq,[2,75]),o($Vq,[2,76]),o($Vq,[2,77]),o($Vq,[2,78]),o($Vq,[2,79]),{19:124,20:$Vc,21:$Vd,69:214},{28:$Vr,30:$Vs,31:$Vt,38:215,39:216},{49:[1,218],54:[1,217]},o($VC,[2,51]),{56:[1,219]},{56:[1,220]},{56:[1,221]},{48:[1,222],49:[1,223]},o($VG,[2,41]),o($VG,[2,43]),o($VG,[2,44]),o($VG,[2,45]),o($VG,[2,46]),o($VG,[2,47]),o($VG,[2,48]),o($Vq,[2,96]),o($Vq,[2,98]),o($Vq,[2,99]),o($Vq,[2,100]),o($Vq,[2,101]),o($Vq,[2,102]),o($Vq,[2,103]),o($Va,[2,106]),o($VQ,[2,107]),o($VQ,[2,108]),{49:[1,225],119:224,120:[2,166]},{49:[2,184]},{128:[1,226]},o($VI,[2,134]),{19:231,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:228,35:$VN,36:$VO,37:229,102:227,104:$VR},o($Vz,[2,130],{62:$VS,70:$VT,105:[1,233],106:$VU,107:$VV,108:$VW,109:$VX,110:$VY,112:$VZ}),o($V_,[2,135]),o($V_,[2,136]),o($V_,[2,137]),o($V$,[2,26]),o($V$,[2,27]),o($V$,[2,23]),o($V$,[2,24]),o($V$,[2,25]),o($Vo,[2,129]),o($Vo,[2,20]),o($Vl,[2,17]),o($Vb,[2,207],{62:$V01,70:$V11,105:[1,242],106:$V21,107:$V31,108:$V41,109:$V51,110:$V61,112:$V71,113:$V81}),o($V91,[2,209]),o($V91,[2,210]),o($V91,[2,211]),o($V91,[2,212]),o($Va1,[2,30]),o($Va1,[2,31]),o($Vp,[2,206]),o($Va,[2,92]),o($VQ,[2,93]),o($VQ,[2,94]),o($VB,[2,49]),o($VC,$VD,{19:168,55:251,20:$Vc,21:$Vd,30:$VE,31:$VF}),{28:$Vr,30:$Vs,31:$Vt,35:$Vu,36:$Vv,38:253,39:252,40:254,41:255,42:$Vw,45:256,46:$Vx,51:257,52:$Vy},{28:$Vr,30:$Vs,31:$Vt,35:$Vu,36:$Vv,38:259,39:258,40:260,41:261,42:$Vw,45:262,46:$Vx,51:263,52:$Vy},{28:$Vr,30:$Vs,31:$Vt,35:$Vu,36:$Vv,38:265,39:264,40:266,41:267,42:$Vw,45:268,46:$Vx,51:269,52:$Vy},o($VB,[2,39]),o($VG,$VH,{39:173,38:174,40:175,41:176,45:177,51:178,50:270,28:$Vr,30:$Vs,31:$Vt,35:$Vu,36:$Vv,42:$Vw,46:$Vx,52:$Vy}),{120:[1,271]},{97:$Vb1,121:272,122:273},{116:[1,275]},o($VI,[2,132],{62:$Vc1,70:$Vd1,105:[1,277],106:$Ve1,107:$Vf1,108:$Vg1,109:$Vh1,110:$Vi1,112:$Vj1,113:$Vk1}),o($Va1,[2,149]),o($Va1,[2,150]),o($Va1,[2,151]),o($Va1,[2,152]),{19:197,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:195,99:286,104:$VM},{19:197,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:195,99:287,104:$VM},{19:197,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:195,99:288,104:$VM},{19:197,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:195,99:289,104:$VM},{19:197,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:195,99:290,104:$VM},{19:197,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:195,99:291,104:$VM},{19:197,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:195,99:292,104:$VM},{27:294,28:$Vi,29:295,30:$VJ,31:$VK,32:$VL,111:293},{29:296,30:$VJ,31:$VK,32:$VL},{19:210,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:207,35:$VN,36:$VO,37:208,104:$VP,149:297},{19:210,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:207,35:$VN,36:$VO,37:208,104:$VP,149:298},{19:210,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:207,35:$VN,36:$VO,37:208,104:$VP,149:299},{19:210,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:207,35:$VN,36:$VO,37:208,104:$VP,149:300},{19:210,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:207,35:$VN,36:$VO,37:208,104:$VP,149:301},{19:210,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:207,35:$VN,36:$VO,37:208,104:$VP,149:302},{19:210,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:207,35:$VN,36:$VO,37:208,104:$VP,149:303},{27:294,28:$Vi,29:295,30:$VJ,31:$VK,32:$VL,111:304},{29:305,30:$VJ,31:$VK,32:$VL},{27:307,28:$Vi,29:306,30:$VJ,31:$VK,32:$VL,35:$VN,36:$VO,37:308},o($VC,[2,50]),o($VC,[2,53]),o($VC,[2,56]),o($VC,[2,59]),o($VC,[2,62]),o($VC,[2,65]),o($VC,[2,68]),o($VC,[2,54]),o($VC,[2,57]),o($VC,[2,60]),o($VC,[2,63]),o($VC,[2,66]),o($VC,[2,69]),o($VC,[2,55]),o($VC,[2,58]),o($VC,[2,61]),o($VC,[2,64]),o($VC,[2,67]),o($VC,[2,70]),o($VG,[2,40]),o($Va,[2,165]),{49:[1,309],120:[2,167]},o($Vl1,[2,169]),{19:310,20:$Vc,21:$Vd},{19:311,20:$Vc,21:$Vd},{19:231,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:228,35:$VN,36:$VO,37:229,102:312,104:$VR},{19:231,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:228,35:$VN,36:$VO,37:229,102:313,104:$VR},{19:231,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:228,35:$VN,36:$VO,37:229,102:314,104:$VR},{19:231,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:228,35:$VN,36:$VO,37:229,102:315,104:$VR},{19:231,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:228,35:$VN,36:$VO,37:229,102:316,104:$VR},{19:231,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:228,35:$VN,36:$VO,37:229,102:317,104:$VR},{19:231,20:$Vc,21:$Vd,27:198,28:$Vi,29:199,30:$VJ,31:$VK,32:$VL,33:228,35:$VN,36:$VO,37:229,102:318,104:$VR},{27:294,28:$Vi,29:295,30:$VJ,31:$VK,32:$VL,111:319},{29:320,30:$VJ,31:$VK,32:$VL},{27:322,28:$Vi,29:321,30:$VJ,31:$VK,32:$VL,35:$VN,36:$VO,37:323},o([5,6,70,79,81,83,101,105],[2,138],{62:$VS,106:$VU,107:$VV,108:$VW,109:$VX,110:$VY,112:$VZ}),o([5,6,79,81,83,101,105],[2,139],{62:$VS,70:$VT,106:$VU,107:$VV,108:$VW,109:$VX,110:$VY,112:$VZ}),o([5,6,62,70,79,81,83,101,105,110,112],[2,140],{106:$VU,107:$VV,108:$VW,109:$VX}),o($V_,[2,141]),o($V_,[2,142]),o($V_,[2,143]),o($V_,[2,144]),o($V_,[2,145]),{70:[1,324]},{70:[1,325]},o($V_,[2,146]),o([5,6,70,79,83,105],[2,213],{62:$V01,106:$V21,107:$V31,108:$V41,109:$V51,110:$V61,112:$V71,113:$V81}),o([5,6,79,83,105],[2,214],{62:$V01,70:$V11,106:$V21,107:$V31,108:$V41,109:$V51,110:$V61,112:$V71,113:$V81}),o([5,6,62,70,79,83,105,110,112,113],[2,215],{106:$V21,107:$V31,108:$V41,109:$V51}),o($V91,[2,216]),o($V91,[2,217]),o($V91,[2,218]),o($V91,[2,219]),o($V91,[2,220]),o($V91,[2,221]),o($V91,[2,222]),o($V91,[2,223]),o($V91,[2,224]),{97:$Vb1,122:326},{123:[1,327],125:[1,328]},{49:[1,330],120:[1,329]},o([5,6,70,79,81,83,105],[2,153],{62:$Vc1,106:$Ve1,107:$Vf1,108:$Vg1,109:$Vh1,110:$Vi1,112:$Vj1,113:$Vk1}),o([5,6,79,81,83,105],[2,154],{62:$Vc1,70:$Vd1,106:$Ve1,107:$Vf1,108:$Vg1,109:$Vh1,110:$Vi1,112:$Vj1,113:$Vk1}),o([5,6,62,70,79,81,83,105,110,112,113],[2,155],{106:$Ve1,107:$Vf1,108:$Vg1,109:$Vh1}),o($Va1,[2,156]),o($Va1,[2,157]),o($Va1,[2,158]),o($Va1,[2,159]),o($Va1,[2,160]),o($Va1,[2,161]),o($Va1,[2,162]),o($Va1,[2,163]),o($Va1,[2,164]),{27:331,28:$Vi},{29:332,30:$VJ,31:$VK,32:$VL},o($Vl1,[2,168]),{116:[1,333]},{116:[1,334]},o($Vl1,$Vm1,{126:335,129:$Vn1}),{19:337,20:$Vc,21:$Vd},o($V$,[2,147]),o($V$,[2,148]),{19:338,20:$Vc,21:$Vd},{19:339,20:$Vc,21:$Vd},o($Vl1,[2,174]),{27:340,28:$Vi},{120:[1,341]},{49:[1,343],120:[1,342]},{49:[1,345],120:[1,344]},{27:346,28:$Vi},o($Vl1,$Vm1,{126:347,129:$Vn1}),o($Vl1,$Vo1,{124:348,130:$Vp1}),{19:350,20:$Vc,21:$Vd},o($Vq1,$Vo1,{124:351,130:$Vp1}),{19:352,20:$Vc,21:$Vd},o($Vl1,[2,177]),o($Vl1,[2,175]),o($Vl1,[2,170]),{87:[1,353],116:[1,355],131:[1,354]},{120:[1,356]},o($Vl1,$Vm1,{126:357,129:$Vn1}),{120:[1,358]},o($Vq1,[2,179]),o($Vq1,[2,180]),{19:360,20:$Vc,21:$Vd,132:359},o($Vl1,$Vo1,{124:361,130:$Vp1}),o($Vl1,[2,171]),o($Vq1,$Vo1,{124:362,130:$Vp1}),{49:[1,364],120:[1,363]},o($Vl1,[2,183]),o($Vl1,[2,172]),o($Vl1,$Vm1,{126:365,129:$Vn1}),o($Vq1,[2,181]),{19:366,20:$Vc,21:$Vd},o($Vl1,[2,173]),o($Vl1,[2,182])],defaultActions:{27:[2,1],62:[2,21],107:[2,185],148:[2,186],149:[2,187],190:[2,184]},parseError:function parseError(str,hash){if(hash.recoverable){this.trace(str)}else{var error=new Error(str);error.hash=hash;throw error}},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;var args=lstack.slice.call(arguments,1);var lexer=Object.create(this.lexer);var sharedState={yy:{}};for(var k in this.yy){if(Object.prototype.hasOwnProperty.call(this.yy,k)){sharedState.yy[k]=this.yy[k]}}lexer.setInput(input,sharedState.yy);sharedState.yy.lexer=lexer;sharedState.yy.parser=this;if(typeof lexer.yylloc=="undefined"){lexer.yylloc={}}var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;if(typeof sharedState.yy.parseError==="function"){this.parseError=sharedState.yy.parseError}else{this.parseError=Object.getPrototypeOf(this).parseError}function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n}_token_stack:var lex=function(){var token;token=lexer.lex()||EOF;if(typeof token!=="number"){token=self.symbols_[token]||token}return token};var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state]){action=this.defaultActions[state]}else{if(symbol===null||typeof symbol=="undefined"){symbol=lex()}action=table[state]&&table[state][symbol]}if(typeof action==="undefined"||!action.length||!action[0]){var errStr="";expected=[];for(p in table[state]){if(this.terminals_[p]&&p>TERROR){expected.push("'"+this.terminals_[p]+"'")}}if(lexer.showPosition){errStr="Parse error on line "+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'"}else{errStr="Parse error on line "+(yylineno+1)+": Unexpected "+(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'")}this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1){throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol)}switch(action[0]){case 1:stack.push(symbol);vstack.push(lexer.yytext);lstack.push(lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=lexer.yyleng;yytext=lexer.yytext;yylineno=lexer.yylineno;yyloc=lexer.yylloc;if(recovering>0){recovering--}}else{symbol=preErrorSymbol;preErrorSymbol=null}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges){yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]}r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args));if(typeof r!=="undefined"){return r}if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len)}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true}}return true}};var lexer=function(){var lexer={EOF:1,parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash)}else{throw new Error(str)}},setInput:function(input,yy){this.yy=yy||this.yy||{};this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match="";this.conditionStack=["INITIAL"];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0]}this.offset=0;return this},input:function(){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++}else{this.yylloc.last_column++}if(this.options.ranges){this.yylloc.range[1]++}this._input=this._input.slice(1);return ch},unput:function(ch){var len=ch.length;var lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len);this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len]}this.yyleng=this.yytext.length;return this},more:function(){this._more=true;return this},reject:function(){if(this.options.backtrack_lexer){this._backtrack=true}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}return this},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length)}return(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var pre=this.pastInput();var c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^"},test_match:function(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0)}}lines=match[0].match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno+=lines.length}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];

this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng]}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false}if(token){return token}else if(this._backtrack){for(var k in backup){this[k]=backup[k]}return false}return false},next:function(){if(this.done){return this.EOF}if(!this._input){this.done=true}var token,match,tempMatch,index;if(!this._more){this.yytext="";this.match=""}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token}else if(this._backtrack){match=false;continue}else{return false}}else if(!this.options.flex){break}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token}return false}if(this._input===""){return this.EOF}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}},lex:function lex(){var r=this.next();if(r){return r}else{return this.lex()}},begin:function begin(condition){this.conditionStack.push(condition)},popState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop()}else{return this.conditionStack[0]}},_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules}else{return this.conditions["INITIAL"].rules}},topState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n]}else{return"INITIAL"}},pushState:function pushState(condition){this.begin(condition)},stateStackSize:function stateStackSize(){return this.conditionStack.length},options:{"case-insensitive":true},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:return 21;break;case 1:return 30;break;case 2:return 31;break;case 3:break;case 4:break;case 5:return"ABORT";break;case 6:return"ADD";break;case 7:return"AFTER";break;case 8:return"ALTER";break;case 9:return"ANALYZE";break;case 10:return 70;break;case 11:return 91;break;case 12:return"ASC";break;case 13:return"ATTACH";break;case 14:return"BEFORE";break;case 15:return"BEGIN";break;case 16:return 110;break;case 17:return"BY";break;case 18:return"CASCADE";break;case 19:return"CASE";break;case 20:return"CAST";break;case 21:return"CHECK";break;case 22:return"COLLATE";break;case 23:return"COLUMN";break;case 24:return"CONFLICT";break;case 25:return 83;break;case 26:return"CONSTRAINT";break;case 27:return 114;break;case 28:return"CROSS";break;case 29:return"CURRENT DATE";break;case 30:return"CURRENT TIME";break;case 31:return"CURRENT TIMESTAMP";break;case 32:return"DATABASE";break;case 33:return"DEFAULT";break;case 34:return"DEFERRABLE";break;case 35:return"DEFERRED";break;case 36:return 74;break;case 37:return 81;break;case 38:return"DETACH";break;case 39:return 86;break;case 40:return 137;break;case 41:return 138;break;case 42:return"EACH";break;case 43:return"ELSE";break;case 44:return"END";break;case 45:return"ESCAPE";break;case 46:return"EXCEPT";break;case 47:return"EXCLUSIVE";break;case 48:return"EXISTS";break;case 49:return"EXPLAIN";break;case 50:return"FAIL";break;case 51:return"FOR";break;case 52:return"FOREIGN";break;case 53:return 75;break;case 54:return"FULL";break;case 55:return"GLOB";break;case 56:return"GROUP";break;case 57:return 101;break;case 58:return"IF";break;case 59:return"IGNORE";break;case 60:return"IMMEDIATE";break;case 61:return"IN";break;case 62:return 96;break;case 63:return 97;break;case 64:return"INDEXED";break;case 65:return"INITIALLY";break;case 66:return"INNER";break;case 67:return 57;break;case 68:return"INSTEAD";break;case 69:return"INTERSECT";break;case 70:return 58;break;case 71:return"IS";break;case 72:return"ISNULL";break;case 73:return"JOIN";break;case 74:return 128;break;case 75:return"LEFT";break;case 76:return 112;break;case 77:return 113;break;case 78:return 79;break;case 79:return"MATCH";break;case 80:return"NATURAL";break;case 81:return"NO";break;case 82:return"NOT";break;case 83:return"NOTNULL";break;case 84:return 42;break;case 85:return 44;break;case 86:return"OF";break;case 87:return"OFFSET";break;case 88:return 139;break;case 89:return 105;break;case 90:return"ORDER";break;case 91:return"OUTER";break;case 92:return"PLAN";break;case 93:return"PRAGMA";break;case 94:return 127;break;case 95:return"QUERY";break;case 96:return"RAISE";break;case 97:return"RECURSIVE";break;case 98:return"REFERENCES";break;case 99:return"REGEXP";break;case 100:return"REINDEX";break;case 101:return"RELEASE";break;case 102:return"RENAME";break;case 103:return 71;break;case 104:return"RESTRICT";break;case 105:return"RIGHT";break;case 106:return"ROLLBACK";break;case 107:return"ROW";break;case 108:return 103;break;case 109:return 143;break;case 110:return 59;break;case 111:return 115;break;case 112:return"TEMP";break;case 113:return"THEN";break;case 114:return"TO";break;case 115:return"TRIGGER";break;case 116:return"UNION";break;case 117:return"UNIQUE";break;case 118:return 63;break;case 119:return"USING";break;case 120:return"VACUUM";break;case 121:return"VALUES";break;case 122:return"VIEW";break;case 123:return"WHEN";break;case 124:return 65;break;case 125:return"WITH";break;case 126:return 35;break;case 127:return 36;break;case 128:return 135;break;case 129:return 136;break;case 130:return 134;break;case 131:return 28;break;case 132:return 129;break;case 133:return 125;break;case 134:return 123;break;case 135:return 130;break;case 136:return 87;break;case 137:return 131;break;case 138:return 28;break;case 139:return 28;break;case 140:return"TILDEs";break;case 141:return 68;break;case 142:return"PLUS";break;case 143:return"MINUS";break;case 144:return 90;break;case 145:return"SLASH";break;case 146:return"REM";break;case 147:return"RSHIFT";break;case 148:return"LSHIFT";break;case 149:return"NE";break;case 150:return"NE";break;case 151:return 107;break;case 152:return 106;break;case 153:return 109;break;case 154:return 108;break;case 155:return 62;break;case 156:return"BITAND";break;case 157:return"BITOR";break;case 158:return 116;break;case 159:return 120;break;case 160:return 52;break;case 161:return 54;break;case 162:return 46;break;case 163:return 48;break;case 164:return 23;break;case 165:return 49;break;case 166:return 56;break;case 167:return 6;break;case 168:return"DOLLAR";break;case 169:return"QUESTION";break;case 170:return"CARET";break;case 171:return 20;break;case 172:return 5;break;case 173:return"INVALID";break}},rules:[/^(?:([`](\\.|[^"]|\\")*?[`])+)/i,/^(?:(['](\\.|[^']|\\')*?['])+)/i,/^(?:(["](\\.|[^"]|\\")*?["])+)/i,/^(?:--(.*?)($|\r\n|\r|\n))/i,/^(?:\s+)/i,/^(?:ABORT\b)/i,/^(?:ADD\b)/i,/^(?:AFTER\b)/i,/^(?:ALTER\b)/i,/^(?:ANALYZE\b)/i,/^(?:AND\b)/i,/^(?:AS\b)/i,/^(?:ASC\b)/i,/^(?:ATTACH\b)/i,/^(?:BEFORE\b)/i,/^(?:BEGIN\b)/i,/^(?:BETWEEN\b)/i,/^(?:BY\b)/i,/^(?:CASCADE\b)/i,/^(?:CASE\b)/i,/^(?:CAST\b)/i,/^(?:CHECK\b)/i,/^(?:COLLATE\b)/i,/^(?:COLUMN\b)/i,/^(?:CONFLICT\b)/i,/^(?:CONSISTENT_READ\b)/i,/^(?:CONSTRAINT\b)/i,/^(?:CREATE\b)/i,/^(?:CROSS\b)/i,/^(?:CURRENT_DATE\b)/i,/^(?:CURRENT_TIME\b)/i,/^(?:CURRENT_TIMESTAMP\b)/i,/^(?:DATABASE\b)/i,/^(?:DEFAULT\b)/i,/^(?:DEFERRABLE\b)/i,/^(?:DEFERRED\b)/i,/^(?:DELETE\b)/i,/^(?:DESC\b)/i,/^(?:DETACH\b)/i,/^(?:DISTINCT\b)/i,/^(?:DROP\b)/i,/^(?:DESCRIBE\b)/i,/^(?:EACH\b)/i,/^(?:ELSE\b)/i,/^(?:END\b)/i,/^(?:ESCAPE\b)/i,/^(?:EXCEPT\b)/i,/^(?:EXCLUSIVE\b)/i,/^(?:EXISTS\b)/i,/^(?:EXPLAIN\b)/i,/^(?:FAIL\b)/i,/^(?:FOR\b)/i,/^(?:FOREIGN\b)/i,/^(?:FROM\b)/i,/^(?:FULL\b)/i,/^(?:GLOB\b)/i,/^(?:GROUP\b)/i,/^(?:HAVING\b)/i,/^(?:IF\b)/i,/^(?:IGNORE\b)/i,/^(?:IMMEDIATE\b)/i,/^(?:IN\b)/i,/^(?:USE\b)/i,/^(?:INDEX\b)/i,/^(?:INDEXED\b)/i,/^(?:INITIALLY\b)/i,/^(?:INNER\b)/i,/^(?:INSERT\b)/i,/^(?:INSTEAD\b)/i,/^(?:INTERSECT\b)/i,/^(?:INTO\b)/i,/^(?:IS\b)/i,/^(?:ISNULL\b)/i,/^(?:JOIN\b)/i,/^(?:KEY\b)/i,/^(?:LEFT\b)/i,/^(?:LIKE\b)/i,/^(?:CONTAINS\b)/i,/^(?:LIMIT\b)/i,/^(?:MATCH\b)/i,/^(?:NATURAL\b)/i,/^(?:NO\b)/i,/^(?:NOT\b)/i,/^(?:NOTNULL\b)/i,/^(?:NULL\b)/i,/^(?:UNDEFINED\b)/i,/^(?:OF\b)/i,/^(?:OFFSET\b)/i,/^(?:ON\b)/i,/^(?:OR\b)/i,/^(?:ORDER\b)/i,/^(?:OUTER\b)/i,/^(?:PLAN\b)/i,/^(?:PRAGMA\b)/i,/^(?:PRIMARY\b)/i,/^(?:QUERY\b)/i,/^(?:RAISE\b)/i,/^(?:RECURSIVE\b)/i,/^(?:REFERENCES\b)/i,/^(?:REGEXP\b)/i,/^(?:REINDEX\b)/i,/^(?:RELEASE\b)/i,/^(?:RENAME\b)/i,/^(?:REPLACE\b)/i,/^(?:RESTRICT\b)/i,/^(?:RIGHT\b)/i,/^(?:ROLLBACK\b)/i,/^(?:ROW\b)/i,/^(?:SELECT\b)/i,/^(?:SCAN\b)/i,/^(?:SET\b)/i,/^(?:TABLE\b)/i,/^(?:TEMP\b)/i,/^(?:THEN\b)/i,/^(?:TO\b)/i,/^(?:TRIGGER\b)/i,/^(?:UNION\b)/i,/^(?:UNIQUE\b)/i,/^(?:UPDATE\b)/i,/^(?:USING\b)/i,/^(?:VACUUM\b)/i,/^(?:VALUES\b)/i,/^(?:VIEW\b)/i,/^(?:WHEN\b)/i,/^(?:WHERE\b)/i,/^(?:WITH\b)/i,/^(?:TRUE\b)/i,/^(?:FALSE\b)/i,/^(?:SHOW\b)/i,/^(?:TABLES\b)/i,/^(?:STRING\b)/i,/^(?:NUMBER\b)/i,/^(?:THROUGHPUT\b)/i,/^(?:GSI\b)/i,/^(?:LSI\b)/i,/^(?:PROJECTION\b)/i,/^(?:ALL\b)/i,/^(?:KEYS_ONLY\b)/i,/^(?:[-]?(\d*[.])?\d+[eE]\d+)/i,/^(?:[-]?(\d*[.])?\d+)/i,/^(?:~)/i,/^(?:\+=)/i,/^(?:\+)/i,/^(?:-)/i,/^(?:\*)/i,/^(?:\/)/i,/^(?:%)/i,/^(?:>>)/i,/^(?:<<)/i,/^(?:<>)/i,/^(?:!=)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:<)/i,/^(?:=)/i,/^(?:&)/i,/^(?:\|)/i,/^(?:\()/i,/^(?:\))/i,/^(?:\{)/i,/^(?:\})/i,/^(?:\[)/i,/^(?:\])/i,/^(?:\.)/i,/^(?:,)/i,/^(?::)/i,/^(?:;)/i,/^(?:\$)/i,/^(?:\?)/i,/^(?:\^)/i,/^(?:[a-zA-Z_][a-zA-Z_0-9]*)/i,/^(?:$)/i,/^(?:.)/i],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],inclusive:true}}};return lexer}();parser.lexer=lexer;function Parser(){this.yy={}}Parser.prototype=parser;parser.Parser=Parser;return new Parser}();if(typeof require!=="undefined"&&typeof exports!=="undefined"){exports.parser=parserV2;exports.Parser=parserV2.Parser;exports.parse=function(){return parserV2.parse.apply(parserV2,arguments)};exports.main=function commonjsMain(args){if(!args[1]){console.log("Usage: "+args[0]+" FILE");process.exit(1)}var source=require("fs").readFileSync(require("path").normalize(args[1]),"utf8");return exports.parser.parse(source)};if(typeof module!=="undefined"&&require.main===module){exports.main(process.argv.slice(1))}}